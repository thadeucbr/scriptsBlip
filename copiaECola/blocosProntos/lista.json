[{"$contentActions":[{"action":{"$id":"d8e25b49-af9d-42cb-9189-a7d020ab0974","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"aef0497e-1f1a-4a8a-9016-783119f70769","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":"1500"},"metadata":{}},"$cardContent":{"document":{"id":"aef0497e-1f1a-4a8a-9016-783119f70769","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":"1500"}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false,"$$hashKey":"object:2149"},{"action":{"$id":"6eab91e1-a8d9-4f36-877e-bd3049512919","$typeOfContent":"raw-content","type":"SendRawMessage","settings":{"metadata":{},"type":"application/json","rawContent":"{{dynamicContent}}"}},"$invalid":false,"$$hashKey":"object:2150"},{"input":{"bypass":true,"$cardContent":{"document":{"id":"e642829d-fc0c-4fab-9c37-06c2fb79977b","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false,"$$hashKey":"object:2151"}],"$conditionOutputs":[{"stateId":"50ffb2cd-8a2c-49fc-b9b4-7923db73ab43","typeOfStateId":"state","$connId":"con_228","$id":"f6b5a2f4-95b2-4b95-a158-703dc53dc4eb","conditions":[{"source":"input","comparison":"exists","values":[],"$$hashKey":"object:2172"},{"values":["dynamicContent"],"source":"context","comparison":"notEquals","variable":"exceptionType","$$hashKey":"object:2173"}],"$invalid":false,"$$hashKey":"object:2158"}],"$enteringCustomActions":[{"$id":"3aa9d290-4cc4-4607-a662-a0366eb1b3d9","$typeOfContent":"","type":"TrackEvent","$title":"Track \"SPD Main {state.name} exibição\"","$invalid":false,"settings":{"extras":{"IdSessao":" {{idSessao}}","Identity":"{{contact.identity}}","Doc":"{{contaSelecionada@doc}}","EC":"{{selectedEc@codigoEc}}"},"category":"SPD Main {{state.name}} exibição","action":"Exibição"},"conditions":[]},{"$id":"83de69ad-cc6d-4f42-8b73-e78b4a5e5528","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"dynamicContent\"","$invalid":false,"settings":{"function":"run","source":"// Texto a ser apresentado no body no componente de lista\nconst text = ''\n// Texto do titulo do botão\nconst buttonTitle = ''\n/**\n * @typedef {Object} MenuOption\n * @property {string} id - ID da opção do menu\n * @property {string} title - Título da opção do menu\n * @property {string} description - Descrição da opção do menu\n */\n\n/**\n * Adicione as opções que devem ser exibidas por padrão para todos os usuários. \n * O id deve ser igual a posição do menu que será exibido o botão. Ex: { id: 1 } para o primeiro item da lista.\n * @type {MenuOption[]}\n */\nconst menuOptions = [\n\t{\n\t\t\"id\": \"1\",\n\t\t\"title\": \"X\",\n\t\t\"description\": \"X\"\n\t},\n\t{\n\t\t\"id\": \"2\",\n\t\t\"title\": \"X\",\n\t\t\"description\": \"X\"\n\t},\n\t{\n\t\t\"id\": \"3\",\n\t\t\"title\": \"X\",\n\t\t\"description\": \"X\"\n\t},\n\t{\n\t\t\"id\": \"4\",\n\t\t\"title\": \"X\",\n\t\t\"description\": \"X\"\n\t},\n\t{\n\t\t\"id\": \"5\",\n\t\t\"title\": \"X\",\n\t\t\"description\": \"X \"\n\t},\n\t{\n\t\t\"id\": \"6\",\n\t\t\"title\": \"X\",\n\t\t\"description\": \"X\"\n\t},\n\t{\n\t\t\"id\": \"7\",\n\t\t\"title\": \"X\",\n\t\t\"description\": \"X\"\n\t},\n\t{\n\t\t\"id\": \"8\",\n\t\t\"title\": \"X\",\n\t\t\"description\": \"X\"\n\t},\n\t{\n\t\t\"id\": \"9\",\n\t\t\"title\": \"X\",\n\t\t\"description\": \"X\"\n\t},\n]\n/**\n * @typedef {Object} MenuOption\n * @property {number} posicao - Posição que o botão deve ser inserido no menu\n * @property {string} title - Título do botão\n * @property {string} description - Descrição do botão\n */\n/**\n * @summary Essa função adiciona uma opção (botão) no menu de acordo com a posição informada e reordena todos os botões.\n * @param {MenuOption} option - Objeto contendo a posição, título e descrição do botão\n * @example adicionaOpcaoNoMenu({ posicao: 2, title: 'Conta Corrente', description: 'Extratos, Fazer pix, Antecipar saldo, Falar sobre conta, entre outros.' })\n */\nfunction adicionaOpcaoNoMenu({ posicao, title, description }) {\n\tif (posicao > menuOptions.length) {\n\t\tposicao = Number(menuOptions[menuOptions.length - 1].id) + 1\n\t}\n\tif (menuOptions.find(option => option.id == posicao)) {\n\t\tquantidadeItens = menuOptions.length\n\t\tfor (let i = Number(posicao - 1); i < quantidadeItens; i++) {\n\t\t\tmenuOptions[i].id = (i + 2).toString()\n\t\t}\n\t\tmenuOptions.push({\n\t\t\tid: posicao.toString(),\n\t\t\ttitle: title.slice(0, 24),\n\t\t\tdescription: description.slice(0, 72) || ''\n\t\t})\n\t} else {\n\t\tmenuOptions.push({\n\t\t\tid: posicao.toString(),\n\t\t\ttitle: title.slice(0, 24),\n\t\t\tdescription: description.slice(0, 72)\n\t\t})\n\t}\n\tmenuOptions.sort((a, b) => a.id - b.id)\n}\n\n/**\n * @typedef {Object} MenuOptionUpdate\n * @property {string} parametroDeBusca - Título ou descrição da opção que deseja atualizar\n * @property {string} title - Novo título do botão\n * @property {string} description - Nova descrição do botão\n */\n\n/**\n * @summary Essa função atualiza o título e descrição de uma opção (botão) do menu.\n * @param {MenuOptionUpdate} option - Objeto contendo o título ou descrição da opção que deseja atualizar, novo título e nova descrição do botão\n * @example atualizaOpcaoMenu({ parametroDeBusca: 'Conta Corrente', title: 'Conta Corrente', description: 'Extratos, Fazer pix, Antecipar saldo, Falar sobre conta, entre outros.' })\n */\nfunction atualizaOpcaoMenu({ parametroDeBusca, title, description }) {\n\t// Parametro de busca é o title ou description da opção que deseja atualizar\n\tconst opcao = menuOptions.find(option => option.title === parametroDeBusca || option.description === parametroDeBusca)\n\tif (!opcao) {\n\t\treturn\n\t}\n\tmenuOptions.find(option => option.id === opcao.id).title = title.slice(0, 24)\n\tmenuOptions.find(option => option.id === opcao.id).description = description.slice(0, 72) || ''\n}\n/**\n * @typedef {Object} PermissionCheck\n * @property {string} tituloDoBotao - Título ou descrição da opção que deseja verificar\n * @property {Array.<string>} permissoes - Permissões do usuário (usar o array de permissões da conta selecionada)\n * @property {string} permissoesNecessarias - Permissão necessária para exibir a opção\n */\n\n/**\n * @summary Essa função verifica se o usuário possui a permissão necessária para exibir a opção no menu.\n * @param {PermissionCheck} permission - Objeto contendo o título ou descrição da opção que deseja verificar, permissões do usuário e permissão necessária para exibir a opção\n * @example verificaPermissao({ tituloDoBotao: 'Conta Corrente', permissoes: ['extratoDeContaCorrente'], permissoesNecessarias: 'extratoDeContaCorrente' })\n */\nfunction verificaPermissao({ tituloDoBotao, permissoes, permissoesNecessarias }) {\n\tconst opcao = menuOptions.find(option => option.title === tituloDoBotao || option.description === tituloDoBotao);\n\n\tif (!opcao) {\n\t\treturn;\n\t}\n\n\tconst hasPermission = permissoesNecessarias.some(necessaria => permissoes.includes(necessaria));\n\n\tif (hasPermission) {\n\t\treturn;\n\t}\n\n\tconst index = menuOptions.indexOf(opcao);\n\tif (index > -1) {\n\t\tmenuOptions.splice(index, 1);\n\t}\n}\n\nfunction removeOpcaoDoMenu({ tituloDoBotao }) {\n\tconst opcao = menuOptions.find(option => option.title === tituloDoBotao || option.description === tituloDoBotao)\n\tif (!opcao) {\n\t\treturn\n\t}\n\tconst index = menuOptions.indexOf(opcao)\n\tmenuOptions.splice(index, 1)\n}\n\nfunction removeDescricaoDoBotao({ tituloDoBotao, parteASerRemovida, listaPermissoes, permissaoNecessaria }) {\n\tif (listaPermissoes.includes(permissaoNecessaria)) {\n\t\treturn\n\t}\n\tconst opcao = menuOptions.find(option => option.title === tituloDoBotao || option.description === tituloDoBotao)\n\tif (!opcao) {\n\t\treturn\n\t}\n\tconst index = menuOptions.indexOf(opcao)\n\tmenuOptions[index].description = menuOptions[index].description.replace(parteASerRemovida, '')\n}\n/**\n * @typedef {Object} ContaSelecionada\n * @property {number} codigoCliente\n * @property {string} baseDocumento\n * @property {string} agencia\n * @property {string} agenciaCadastroBacen\n * @property {string} conta\n * @property {(boolean|string)} contaCorrenteSPD\n * @property {string} canal\n * @property {string} shortname\n * @property {string} usuario\n * @property {number} codigoSegmento\n * @property {string} nivel\n * @property {string} nomeEmpresa\n * @property {string} tipoPessoa\n * @property {string} doc\n * @property {string} nomeCompleto\n * @property {string} primeiroNome\n * @property {string} filaGerente\n * @property {Array.<string>} permissoes\n * @property {string} cpfAppKey\n * @property {(boolean|string)} ec\n * @property {string} segmentoGerente\n */\n\n/**\n * @param {ContaSelecionada} contaSelecionada - Objeto contendo as informações da conta selecionada\n * @description Dentro do try, defina todas as regras de exibição, utilizando as funções disponiveis: \"verificaPermissao\", \"atualizaOpcaoMenu\", \"adicionaOpcaoNoMenu\"\n */\nfunction run(contaSelecionada, ecList) {\n\ttry {\n\t\tconst { cpfAppKey, permissoes, ec, segmentoGerente } = JSON.parse(contaSelecionada);\n\t\tlet ecListParsed = JSON.parse(ecList);\n\t\t// Adicione aqui as regras dos menus permissionados e outras regras de negócio\n\t\t// Inicio regras de negocio\n\n\t\t// Fim regras de negocio \n\t\treturn {\n\t\t\t\"recipient_type\": \"individual\",\n\t\t\t\"type\": \"interactive\",\n\t\t\t\"interactive\": {\n\t\t\t\t\"type\": \"list\",\n\t\t\t\t\"header\": {\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"\"\n\t\t\t\t},\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"text\": text\n\t\t\t\t},\n\t\t\t\t\"action\": {\n\t\t\t\t\t\"button\": buttonTitle,\n\t\t\t\t\t\"sections\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"title\": \"\",\n\t\t\t\t\t\t\t\"rows\": menuOptions\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\treturn {\n\t\t\terror: err.message,\n\t\t\texceptionType: 'reiniciarFluxo',\n\t\t\tdynamicContent: {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"text\": {\n\t\t\t\t\t\"body\": \"Estamos fazendo alguns ajustes no sistema e alguns recursos podem estar temporariamente indisponíveis. Em breve, estaremos de volta ao normal.\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","inputVariables":["contaSelecionada","ecList"],"outputVariable":"dynamicContent","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"12d17c26-02d6-4b25-b6ba-aefbc1b7a22d","$typeOfContent":"","type":"TrackEvent","$title":"Tracking \"dynamicContent erro\"","$invalid":false,"settings":{"extras":{},"category":"dynamicContent erro","action":"{{config.serviceName}} | {{state.name}} | {{dynamicContent@error}} | {{contact.identity}} | {{idSessao}}"},"conditions":[{"values":[],"source":"context","comparison":"exists","variable":"dynamicContent@error"}]},{"$id":"d45b7520-a5d6-472f-bca9-4b71a0406b88","$typeOfContent":"","type":"SetVariable","$title":"Set \"exceptionType\" to \"dynamicContent\"","$invalid":false,"settings":{"variable":"exceptionType","value":"dynamicContent"},"conditions":[{"values":[],"source":"context","comparison":"exists","variable":"dynamicContent@error"}]},{"$id":"5170536a-29da-42f7-8e55-c189b5af2326","$typeOfContent":"","type":"SetVariable","$title":"Set \"dynamicContent\" to \"dynamicContent@dynamicContent\"","$invalid":false,"settings":{"variable":"dynamicContent","value":"{{dynamicContent@dynamicContent}}"},"conditions":[{"values":[],"source":"context","comparison":"exists","variable":"dynamicContent@error"}]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"id":"blip-tag-d5a2e6e4-d212-4ac9-b343-f581837318e0","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-a8f6c022-675b-4b11-8300-729f8369a454","label":"ExecuteScript","background":"#FF961E","canChangeBackground":false},{"id":"blip-tag-f2e92433-1771-4320-a070-5cee34265e16","label":"SetVariable","background":"#FF4A1E","canChangeBackground":false},{"id":"blip-tag-4b5d259c-9fea-461f-904b-f72da9c8681e","label":"SendMessage","background":"#EE82EE","canChangeBackground":false}],"id":"ccd8fbe3-66af-4998-b1f5-95ce51ec6387","root":false,"$title":"[X.X.0.0][MSG] X","$position":{"top":"1369.5px","left":"3203.5px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},{"$contentActions":[{"input":{"bypass":false,"$cardContent":{"document":{"id":"e642829d-fc0c-4fab-9c37-06c2fb79977b","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"0:8"},"$invalid":false,"$$hashKey":"object:2107"}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[{"$id":"172bdd8d-2409-4bc2-8335-09884e2ecb33","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"userInput\"","$invalid":false,"settings":{"function":"run","source":"function escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n  }\n\nfunction run(inputUsuario, dynamicContent) {\n  const posicoes = {\n      \"1\": \"primeir[oa]|u[mn]\",\n      \"2\": \"segund[ao]|do[ie]s\",\n      \"3\": \"terceir[ao]|tr[eê]s\",\n      \"4\": \"quart[ao]|[qc]uat(r)?o\",\n      \"5\": \"quint[ao]|[sc]inc[ou]\",\n      \"6\": \"sext[ao]|[sc]inc[uo]\",\n      \"7\": \"s[eé]tim[ao]|[sc]et[ei]\",\n      \"8\": \"oitav[ao]|oit[ou]\",\n      \"9\": \"non[ao]|nov[ei]\",\n      \"10\": \"d[eé][cs]im[ou]|d[ée][sz]\"\n  }\n  try {\n      if (!inputUsuario) return 'inatividade'\n      const regexDictionary = {}\n      const { rows } = JSON.parse(dynamicContent).interactive.action.sections[0]\n      rows.forEach((button, index) => {\n            const key = `^(${index + 1}|${posicoes[index + 1]}|${escapeRegExp(button.title.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase())})$`\n          regexDictionary[key] = button.title\n      })\n      for (let regex in regexDictionary) {\n          if (new RegExp(regex, 'i').test(inputUsuario.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\"))) {\n              return regexDictionary[regex]\n          }\n      }\n      return 'input inesperado'\n  } catch (err) {\n      return 'input inesperado'\n  }\n}","inputVariables":["input.content","dynamicContent"],"outputVariable":"userInput","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"3f082125-b0fd-4f51-9297-74bfc4b4c961","$typeOfContent":"","type":"SetVariable","$title":"Set \"exceptionType\" to \"lista\"","$invalid":false,"settings":{"variable":"exceptionType","value":"lista"},"conditions":[{"values":["input inesperado"],"source":"context","comparison":"equals","variable":"userInput"}]},{"$id":"38306ba1-03a0-4eaf-a340-f50c2d48264d","$typeOfContent":"","type":"SetVariable","$title":"SET \"assunto\" TO \"{userInput}\"","$invalid":false,"settings":{"variable":"assunto","value":"{{userInput}}"},"conditions":[{"values":["input inesperado"],"source":"context","comparison":"notEquals","variable":"userInput"}]},{"$id":"ab889191-fb1d-4935-9e7a-3fc688cbeede","$typeOfContent":"","type":"ExecuteScript","$title":"PROCESS \"precisaKBA\"","$invalid":false,"settings":{"function":"run","source":"/**\n* All input variables needs to be passed as function param;\n* Objects received as param needs to be parsed. Ex.: JSON.parse(inputVariable1);\n* Objects returned needs to be stringfied. Ex.: JSON.stringify(inputVariable1);\n**/\nfunction run(userInput) {\n\ttry {\n\t\tconst listaKBA = [\n\t\t\t\"Descredenciamento\",\n\t\t\t'Questionar uma cobrança',\n\t\t\t'pacotes',\n\t\t\t'Simulador de vendas',\n\t\t\t'Taxa Pix na Safrapay',\n\t\t\t'Taxas de antecipação',\n\t\t\t'Taxas de venda',\n\t\t\t'Consultar máquinas',\n\t\t\t'Domicílio bancário']\n\t\t\tconst precisaKBA = listaKBA.some(intencao => userInput === intencao)\n\n\t\t\tif (precisaKBA){\n\t\t\t\treturn true\n\t\t\t}\n\t\t\treturn false\n\t} catch(erro){\n\t\treturn false\n\t}\n}","inputVariables":["userInput"],"outputVariable":"precisaKBA","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"a39d9f66-ffe2-40a0-9d91-8307c0d8cdb0","$typeOfContent":"","type":"TrackEvent","$title":"Track \"SPD Main {state.name} validação\"","$invalid":false,"settings":{"extras":{"IdSessao":" {{idSessao}}","Identity":"{{contact.identity}}","Doc":"{{contaSelecionada@doc}}","EC":"{{selectedEc@codigoEc}}"},"category":"SPD Main {{state.name}} validação","action":"{{userInput}}"},"conditions":[{"comparison":"exists","source":"context","values":[],"variable":"userInput"}]},{"$id":"2c33d508-83ac-45cd-b327-99711864563b","$typeOfContent":"","type":"TrackEvent","$title":"Track \"SPD Main {state.name} input inesperado\"","$invalid":false,"settings":{"extras":{"IdSessao":" {{idSessao}}","Identity":"{{contact.identity}}","Doc":"{{contaSelecionada@doc}}","EC":"{{selectedEc@codigoEc}}"},"category":"SPD Main {{state.name}} input inesperado","action":"{{input.content}}"},"conditions":[{"values":["input inesperado"],"source":"context","comparison":"equals","variable":"userInput"},{"comparison":"exists","source":"context","values":[],"variable":"input.content"}]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"id":"blip-tag-059d24d5-b643-4ef9-8cb8-878bc34d0ba9","label":"ExecuteScript","background":"#FF961E","canChangeBackground":false},{"id":"blip-tag-ca5f6acd-45a8-4cec-9cfd-9daeef52a77b","label":"SetVariable","background":"#FF4A1E","canChangeBackground":false},{"id":"blip-tag-c3f9d129-61aa-4cbc-9309-782257a9b752","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-d4d7a8fc-d2d4-4364-a7c7-06fb6fb04184","label":"UserInput","background":"#000000","canChangeBackground":false}],"id":"50ffb2cd-8a2c-49fc-b9b4-7923db73ab43","root":false,"$title":"[X.X.0.0][INPUT] X","$position":{"top":"1574.5px","left":"3203.5px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false}]