{"flow":{"onboarding":{"$contentActions":[{"input":{"bypass":false,"$cardContent":{"document":{"id":"4322835e-ef65-4fc6-bde3-08d43adaabcb","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":false,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"{{blockDestinationId}}","typeOfStateId":"variable","$id":"2182f6ed-cfc0-4c1c-ab66-0a691061b75f","conditions":[{"source":"context","comparison":"notEquals","values":["false"],"variable":"blockDestinationId"}],"$invalid":false},{"stateId":"a7b2633e-0182-4fc9-974e-95ce808e60dc","typeOfStateId":"state","$connId":"con_3","$id":"a7bf45fc-648e-4ff8-8b62-bd238164fe5f","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[],"$leavingCustomActions":[{"$id":"2b40947a-8069-4cc1-8636-3174d9bba8d7","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"blockDestinationId\"","$invalid":false,"settings":{"function":"run","source":"function run(state, serviceName) {\n\ttry {\n\t\tconst { botDestination, stateDestination } = JSON.parse(state)\n\t\tif (stateDestination.match(/^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/) && botDestination === serviceName) {\n\t\t\treturn stateDestination\n\t\t}\n\t\treturn false\n\t} catch (err) {\n\t\treturn err\n\t}\n}","inputVariables":["state","config.serviceName"],"outputVariable":"blockDestinationId","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"28fd41dd-0a5d-4368-bad0-1bf0908a3f3f","$typeOfContent":"","type":"TrackEvent","$title":"Track \"inicio extrato\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"inicio extrato","action":"{{state@botOrigin}} | {{input.content}} | {{input.intent.name}}"},"conditions":[]},{"$id":"9d63c622-ed05-4772-90f4-e45416a70f79","$typeOfContent":"","type":"TrackEvent","$title":"Track \"inicio\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"inicio","action":"{{config.serviceName}} | {{state@botOrigin}} | {{state@stateNameOrigin}}"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"isAiGenerated":false,"$tags":[{"id":"blip-tag-7a10e450-70ef-4682-8653-07ea03a39633","label":"ExecuteScript","background":"#FF961E","canChangeBackground":false},{"id":"blip-tag-e503dbb5-321d-4775-849e-e6d112fe9f4a","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-b9dfcc3b-8a2e-41ab-8435-c4254851b730","label":"UserInput","background":"#000000","canChangeBackground":false}],"id":"onboarding","root":true,"$title":"Início","$position":{"top":"239px","left":"1745px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"fallback":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"62a9acdd-1840-4156-a4a0-d58ea177deb1","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"e4c1acf3-e610-4d60-8a8c-771c988209d3","typeOfStateId":"state","$connId":"con_8","$id":"1e498c78-e0af-4df8-bebe-aae154b5607f","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"497ace80-e6ef-490f-9896-6545bfa370b9","$typeOfContent":"","type":"TrackEvent","$title":"Track \"extrato exception\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"extrato exception","action":"{{state.previous.name}} | {{input.content}} | {{input.intent.name}}"},"conditions":[{"values":[],"source":"input","comparison":"exists"}]},{"$id":"95b84826-3b6f-4fff-9157-6244ab7b83dd","$typeOfContent":"","type":"TrackEvent","$title":"Track \"extrato inatividade\"","$invalid":false,"settings":{"extras":{},"category":"extrato inatividade","action":"{{state.previous.name}} | inatividade"},"conditions":[{"values":[],"source":"input","comparison":"notExists"}]},{"$id":"4436aa1c-0dd9-41f8-8ad1-9b48e3ae06fd","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"state\"","$invalid":false,"settings":{"function":"run","source":"function run(previousBlockid, previousStateName, lastInput, intent, serviceName, env) {\n\ttry {\n\t\tlet match = previousStateName.match(/\\[(.*?)\\]/);\n\t\tlet stateNameOrigin = match ? match[1] : previousStateName;\n\t\treturn {\n\t\t\tbotOrigin: serviceName,\n\t\t\tstateOrigin: previousBlockid,\n\t\t\tstateNameOrigin,\n\t\t\tbotDestination: `cascata ${env || \"\"}`.trim(),\n\t\t\tstateDestination: 'welcome',\n\t\t\tlastInput: lastInput || \"inatividade\",\n\t\t\tintent\n\t\t}\n\t} catch (err) {\n\t\treturn {\n\t\t\tbotOrigin: serviceName,\n\t\t\tstateOrigin: previousBlockid,\n\t\t\tbotDestination: `principal ${env || \"\"}`.trim(),\n\t\t\tstateDestination: 'welcome',\n\t\t\tlastInput: lastInput || intent,\n\t\t\terror: err.message,\n\t\t}\n\t}\n}","inputVariables":["state.previous.id","state.previous.name","input.content","input.intent.name","config.serviceName","config.env"],"outputVariable":"state","LocalTimeZoneEnabled":false},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"e4c1acf3-e610-4d60-8a8c-771c988209d3","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"id":"blip-tag-13a5eda6-0054-430d-af02-4b25eaddb512","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-d2c3be77-aec1-4918-b44c-84abcb879c1d","label":"ExecuteScript","background":"#FF961E","canChangeBackground":false}],"id":"fallback","$title":"Exceções","$position":{"top":"52.8571px","left":"2218.43px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"9b8a08ec-f5ae-4744-abbb-d370af5578f0":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"85a9c4c8-745d-4f90-84fb-0d7054fe9048","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"e08bd49f-b6f7-4e64-afac-dd36b1b569e0","typeOfStateId":"state","$connId":"con_13","$id":"9ab26a7c-e8c6-471c-803e-67980c2b2372","conditions":[{"source":"context","comparison":"notExists","values":[],"variable":"dataExtractor@error"}],"$invalid":false},{"stateId":"f11abff4-9b22-4711-b3e0-85af93d51218","typeOfStateId":"state","$connId":"con_18","$id":"342942d2-4a43-4a01-8dc5-a0be40a4a2f2","conditions":[{"source":"input","comparison":"exists","values":[]},{"values":["f11abff4-9b22-4711-b3e0-85af93d51218"],"source":"context","comparison":"notEquals","variable":"state.previous.id"},{"values":["extratoDataInvalida"],"source":"context","comparison":"equals","variable":"exceptionType"},{"values":["8c0cfef9-956f-4171-bc66-5d560aaf7a86"],"source":"context","comparison":"notEquals","variable":"state.previous.id"},{"values":["a17af4c7-78af-45ea-aec4-6fc939ad004b"],"source":"context","comparison":"notEquals","variable":"state.previous.id"},{"values":["3e2cc1a4-d6b8-47a9-87e8-b3deb9a601fd"],"source":"context","comparison":"notEquals","variable":"state.previous.id"}],"$invalid":false}],"$enteringCustomActions":[{"$id":"1e6bd2c1-66d3-490f-9fd8-414b7ab0c81b","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} exibicao\"","$invalid":false,"settings":{"extras":{},"category":"{{state.name}} exibicao","action":"exibicao"},"conditions":[]},{"$id":"8e5c42e8-afdc-47ed-a38d-9f0ce3f6b929","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"dataExtractor\"","$invalid":false,"settings":{"function":"run","source":"function run(input) {\n    try {\n        const months = {\n            janeiro: '01', fevereiro: '02', março: '03', abril: '04', maio: '05', junho: '06',\n            julho: '07', agosto: '08', setembro: '09', outubro: '10', novembro: '11', dezembro: '12',\n            jan: '01', fev: '02', mar: '03', abr: '04', mai: '05', jun: '06', jul: '07', ago: '08',\n            set: '09', out: '10', nov: '11', dez: '12'\n        };\n        const monthsRegex = '(janeiro|jan|fevereiro|fev|março|mar|abril|abr|maio|mai|junho|jun|julho|jul|agosto|ago|setembro|set|outubro|out|novembro|nov|dezembro|dez)';\n        const numbersInWords = {\n            um: 1, dois: 2, três: 3, quatro: 4, cinco: 5, seis: 6, sete: 7, oito: 8, nove: 9,\n            dez: 10, onze: 11, doze: 12, treze: 13, quatorze: 14, quinze: 15, dezesseis: 16, dezessete: 17,\n            dezoito: 18, dezenove: 19, vinte: 20, \"vinte e um\": 21, \"vinte e dois\": 22, \"vinte e três\": 23,\n            \"vinte e quatro\": 24, \"vinte e cinco\": 25, \"vinte e seis\": 26, \"vinte e sete\": 27, \"vinte e oito\": 28,\n            \"vinte e nove\": 29, trinta: 30, \"trinta e um\": 31, \"trinta e dois\": 32, \"trinta e três\": 33,\n            \"trinta e quatro\": 34, \"trinta e cinco\": 35, \"trinta e seis\": 36, \"trinta e sete\": 37,\n            \"trinta e oito\": 38, \"trinta e nove\": 39, quarenta: 40, \"quarenta e um\": 41, \"quarenta e dois\": 42,\n            \"quarenta e três\": 43, \"quarenta e quatro\": 44, \"quarenta e cinco\": 45, \"quarenta e seis\": 46,\n            \"quarenta e sete\": 47, \"quarenta e oito\": 48, \"quarenta e nove\": 49, cinquenta: 50,\n            \"cinquenta e um\": 51, \"cinquenta e dois\": 52, \"cinquenta e três\": 53, \"cinquenta e quatro\": 54,\n            \"cinquenta e cinco\": 55, \"cinquenta e seis\": 56, \"cinquenta e sete\": 57, \"cinquenta e oito\": 58,\n            \"cinquenta e nove\": 59, sessenta: 60, \"sessenta e um\": 61, \"sessenta e dois\": 62,\n            \"sessenta e três\": 63, \"sessenta e quatro\": 64, \"sessenta e cinco\": 65, \"sessenta e seis\": 66,\n            \"sessenta e sete\": 67, \"sessenta e oito\": 68, \"sessenta e nove\": 69, setenta: 70, \"setenta e um\": 71,\n            \"setenta e dois\": 72, \"setenta e três\": 73, \"setenta e quatro\": 74, \"setenta e cinco\": 75,\n            \"setenta e seis\": 76, \"setenta e sete\": 77, \"setenta e oito\": 78, \"setenta e nove\": 79, oitenta: 80,\n            \"oitenta e um\": 81, \"oitenta e dois\": 82, \"oitenta e três\": 83, \"oitenta e quatro\": 84,\n            \"oitenta e cinco\": 85, \"oitenta e seis\": 86, \"oitenta e sete\": 87, \"oitenta e oito\": 88,\n            \"oitenta e nove\": 89, noventa: 90\n        };\n\n\n        const currentDate = new Date();\n        const currentMonth = currentDate.getMonth();\n        const currentYear = currentDate.getFullYear();\n        const ninetyDaysInMillis = 90 * 24 * 60 * 60 * 1000;\n\n        function parseDate(dateStr) {\n            let [day, month, year] = dateStr.split('/');\n            day = day.padStart(2, '0');\n            month = month.padStart(2, '0');\n            year = year ? (year.length === 2 ? '20' + year : year) : currentDate.getFullYear();\n            return new Date(year, month - 1, day);\n        }\n\n        function formatDate(date) {\n            const day = String(date.getDate()).padStart(2, '0');\n            const month = String(date.getMonth() + 1).padStart(2, '0');\n            const year = date.getFullYear();\n            return `${day}/${month}/${year}`;\n        }\n\n        function getMonthNumber(monthName) {\n            return months[monthName.toLowerCase()];\n        }\n\n        function getNumberFromWords(word) {\n            return numbersInWords[word.toLowerCase()];\n        }\n\n        function extractDates(text) {\n            text = text.toLowerCase();\n\n            // Verifica ultimos X dias\n            let match = text.match(/[uú]ltimos (\\d{1,4}) dias/i);\n            if (match) {\n                const numberOfDays = parseInt(match[1], 10);\n                const endDate = currentDate;\n                const startDate = new Date(endDate.getTime() - numberOfDays * 24 * 60 * 60 * 1000);\n                return ([startDate, endDate]);\n            }\n\n            // Verifica ultimos X dias por extenso\n            match = text.match(new RegExp(`últimos (${Object.keys(numbersInWords).join('|')}) dias`, 'i'));\n            if (match) {\n                const numberOfDays = getNumberFromWords(match[1]);\n                const endDate = currentDate;\n                const startDate = new Date(endDate.getTime() - numberOfDays * 24 * 60 * 60 * 1000);\n                return ([startDate, endDate]);\n            }\n\n            // Verifica intervalos de meses por extenso e dias numéricos\n            match = text.match(new RegExp(`(\\\\d{1,2}) de (${monthsRegex}) (at[eé]|a) (\\\\d{1,2}) de (${monthsRegex})`, 'i'));\n            if (match) {\n                let startDay = match[1].padStart(2, '0');\n                let endDay = match[5].padStart(2, '0');\n                const startMonth = getMonthNumber(match[2]);\n                const endMonth = getMonthNumber(match[6]);\n                const year = currentDate.getFullYear();\n                const startDate = parseDate(`${startDay}/${startMonth}/${year}`);\n                const endDate = parseDate(`${endDay}/${endMonth}/${year}`);\n                return [startDate, endDate];\n            }\n\n            // Verifica intervalos de meses por extenso\n            match = text.match(new RegExp(`de (${monthsRegex}) (at[eé]|a) (${monthsRegex})`, 'i'));\n            if (match) {\n                const startMonth = getMonthNumber(match[1]);\n                const endMonth = getMonthNumber(match[5]);\n                const year = currentDate.getFullYear();\n                const startDate = parseDate(`01/${startMonth}/${year}`);\n                const endDate = new Date(year, parseInt(endMonth, 10), 0);\n                return [startDate, endDate];\n            }\n\n            // Verifica frases com mês por extenso\n            match = text.match(new RegExp('de (' + monthsRegex + ')', 'i'));\n            if (match) {\n                const month = getMonthNumber(match[1]);\n                const year = currentDate.getFullYear();\n                const startDate = parseDate(`01/${month}/${year}`);\n                const endDate = new Date(year, parseInt(month, 10), 0);\n                if (currentDate.getMonth() + 1 === parseInt(month, 10)) {\n                    // Se o mês solicitado é o mês atual\n                    return [startDate, currentDate];\n                }\n                return [startDate, endDate];\n            }\n\n            // Verifica intervalos no formato DD/MM até DD/MM\n            match = text.match(/(\\d{1,2}\\/\\d{1,2}) (at[eé]|a) (\\d{1,2}\\/\\d{1,2})/i);\n            if (match) {\n                const year = currentDate.getFullYear();\n                return [parseDate(`${match[1]}/${year}`), parseDate(`${match[3]}/${year}`)];\n            }\n\n            // Verifica intervalos no formato MM/AAAA até MM/AAAA\n            match = text.match(/(\\d{1,2}\\/\\d{4}) (at[eé]|a) (\\d{1,2}\\/\\d{4})/i);\n            if (match) {\n                const [endMonth, endYear] = match[3].split('/');\n                const endDate = new Date(endYear, endMonth, 0); // O dia 0 do próximo mês é o último dia do mês anterior\n                const lastDay = endDate.getDate();\n\n                return [parseDate(`01/${match[1]}`), parseDate(`${lastDay}/${match[3]}`)];\n            }\n\n            // Verifica data no formato \"dia D\"\n            match = text.match(/dia (\\d{1,2})/i);\n            if (match) {\n                const day = match[1].padStart(2, '0');\n                const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n                const year = currentDate.getFullYear();\n                return [parseDate(`${day}/${month}/${year}`)];\n            }\n\n            // Verifica último mês ou mês passado\n            match = text.match(/([úu]ltimo|m[eê]s) passad(o)/i);\n            if (match) {\n                const lastMonthStartDate = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);\n                const lastMonthEndDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0);\n                return [lastMonthStartDate, lastMonthEndDate];\n            }\n\n            // Verifica \"dessa semana\" ou \"essa semana\"\n            match = text.match(/(dessa semana|essa semana)/i);\n            if (match) {\n                const weekStartDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - currentDate.getDay() + 1);\n                return [weekStartDate, currentDate];\n            }\n\n            // Verifica semana passada\n            match = text.match(/semana passada/i);\n            if (match) {\n                const lastWeekEndDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - currentDate.getDay());\n                const lastWeekStartDate = new Date(lastWeekEndDate.getFullYear(), lastWeekEndDate.getMonth(), lastWeekEndDate.getDate() - 6);\n                return [lastWeekStartDate, lastWeekEndDate];\n            }\n\n            // Verifica semana retrasada\n            match = text.match(/semana retrasada/i);\n            if (match) {\n                const twoWeeksAgoEndDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - currentDate.getDay() - 7);\n                const twoWeeksAgoStartDate = new Date(twoWeeksAgoEndDate.getFullYear(), twoWeeksAgoEndDate.getMonth(), twoWeeksAgoEndDate.getDate() - 6);\n                return [twoWeeksAgoStartDate, twoWeeksAgoEndDate];\n            }\n\n            // Verifica deste mês\n            match = text.match(/[d]?esse m[eê]s|m[eê]s atual/i);\n            if (match) {\n                const thisMonthStartDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n                return [thisMonthStartDate, currentDate];\n            }\n\n            // Verifica último trimestre ou trimestre passado\n            match = text.match(/([úu]ltim(a|o)|trimestre) (passad(a|o)|trimestre)/i);\n            if (match) {\n                const currentQuarter = Math.floor(currentMonth / 3) + 1;\n                let lastQuarter, lastQuarterYear;\n                if (currentQuarter === 1) {\n                    lastQuarter = 4;\n                    lastQuarterYear = currentYear - 1;\n                } else {\n                    lastQuarter = currentQuarter - 1;\n                    lastQuarterYear = currentYear;\n                }\n                const startMonthX = (lastQuarter - 1) * 3;\n                const endMonthX = startMonthX + 2;\n                const lastQuarterStartDate = new Date(lastQuarterYear, startMonthX, 1);\n                const lastQuarterEndDate = new Date(lastQuarterYear, endMonthX + 1, 0);\n                return [lastQuarterStartDate, lastQuarterEndDate];\n            }\n\n            // Verifica último bimestre ou bimestre passado\n            match = text.match(/([úu]ltim(a|o)|bimestre) (passad(a|o)|bimestre)/i);\n            if (match) {\n                const currentBimester = Math.floor(currentMonth / 2) + 1;\n                let lastBimester, lastBimesterYear;\n                if (currentBimester === 1) {\n                    lastBimester = 6;\n                    lastBimesterYear = currentYear - 1;\n                } else {\n                    lastBimester = currentBimester - 1;\n                    lastBimesterYear = currentYear;\n                }\n                const startMonth = (lastBimester - 1) * 2;\n                const endMonth = startMonth + 1;\n                const lastBimesterStartDate = new Date(lastBimesterYear, startMonth, 1);\n                const lastBimesterEndDate = new Date(lastBimesterYear, endMonth + 1, 0);\n                return [lastBimesterStartDate, lastBimesterEndDate];\n            }\n\n            // Verifica X dias\n            match = text.match(/(\\d{1,4}) dias/i);\n            if (match) {\n                const numberOfDays = parseInt(match[1], 10);\n                const endDate = currentDate;\n                const startDate = new Date(endDate.getTime() - numberOfDays * 24 * 60 * 60 * 1000);\n                return ([startDate, endDate]);\n            }\n\n            // Verifica X dias por extenso\n            match = text.match(new RegExp(`(${Object.keys(numbersInWords).join('|')}) dias`, 'i'));\n            if (match) {\n                const numberOfDays = getNumberFromWords(match[1]);\n                const endDate = currentDate;\n                const startDate = new Date(endDate.getTime() - numberOfDays * 24 * 60 * 60 * 1000);\n                return ([startDate, endDate]);\n            }\n\n            // Verifica hoje\n            match = text.match(/de hoje|(hoje)/i);\n            if (match) {\n                return [currentDate, currentDate];\n            }\n\n            // Verifica ontem\n            match = text.match(/de ontem|(ontem)/i);\n            if (match) {\n                let yesterday = new Date();\n                yesterday.setDate(yesterday.getDate() - 1);\n                return [yesterday, yesterday];\n            }\n\n            // Verifica datas no formato DD/MM/AAAA\n            match = text.match(/(\\d{1,2}\\/\\d{1,2}\\/\\d{2,4})/g);\n            if (match) return match.map(date => parseDate(date));\n\n            // Verifica datas no formato DD/MM\n            match = text.match(/(\\d{1,2}\\/\\d{1,2})/g);\n            if (match) {\n                return match.map(dateStr => parseDate(`${dateStr}/${currentDate.getFullYear()}`));\n            }\n\n            return [];\n        }\n\n        const dates = extractDates(input);\n\n        if (dates.length === 1) {\n            const startDate = dates[0];\n            const endDate = new Date();\n            const diffInMillis = endDate - startDate;\n            if (diffInMillis < 0 || startDate > endDate) {\n                return { error: 'extratoLancamentoFuturo' };\n            }\n            return formatDate(dates[0]);\n        } else if (dates.length === 2) {\n            const actualDate = new Date();\n            const startDate = dates[0];\n            const endDate = dates[1];\n            const diffInMillis = endDate - startDate;\n            if (diffInMillis < 0 || startDate > actualDate || endDate > actualDate) {\n                return { error: 'extratoLancamentoFuturo' };\n            }\n            if (diffInMillis <= ninetyDaysInMillis) {\n                return `${formatDate(startDate)} - ${formatDate(endDate)}`;\n            } else {\n                return { error: 'extrato90dias' };\n            }\n        } else {\n            return { error: 'extratoDataInvalida' };\n        }\n    } catch (err) {\n        return { error: 'extratoDataInvalida' };\n    }\n}","inputVariables":["input.content"],"outputVariable":"dataExtractor","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"2b49e58c-0e49-46dd-8ada-a72a82f2fb15","$typeOfContent":"","type":"SetVariable","$title":"Set \"exceptionType\" to \"dataExtractor@error\"","$invalid":false,"settings":{"variable":"exceptionType","value":"{{dataExtractor@error}}"},"conditions":[{"values":[],"source":"context","comparison":"exists","variable":"dataExtractor@error"}]}],"$leavingCustomActions":[{"$id":"a324f2ac-e7dd-462b-8481-9c7e796c3d12","$typeOfContent":"","type":"TrackEvent","$title":"Track \"periodo extrato input inesperado\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"periodo extrato input inesperado","action":"{{state.previous.name}} | {{dataExtractor@error}} | {{input.content}}"},"conditions":[{"values":[],"source":"context","comparison":"exists","variable":"dataExtractor@error"}]},{"$id":"03afa7a9-af25-4854-909f-4ef6560f9698","$typeOfContent":"","type":"TrackEvent","$title":"Track \"periodo extrato error\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"periodo extrato error","action":"{{state.previous.name}} | {{dataExtractor@error}}"},"conditions":[{"values":[],"source":"context","comparison":"exists","variable":"dataExtractor@error"}]},{"$id":"08e90e47-63cf-48ed-98e7-c6907d863acb","$typeOfContent":"","type":"TrackEvent","$title":"Track \"periodo extrato input\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"periodo extrato input","action":"{{state.previous.name}} | {{input.content}} | {{dataExtractor}}"},"conditions":[{"values":[],"source":"context","comparison":"notExists","variable":"dataExtractor@error"}]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"isAiGenerated":false,"$tags":[{"id":"blip-tag-4a789ef1-d26c-44b2-bf8a-c4cb07e6dc9f","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-1d635297-c0ad-4c02-ac99-50e15654ef74","label":"ExecuteScript","background":"#FF961E","canChangeBackground":false},{"id":"blip-tag-76d6c7a4-0ace-44f2-ab35-64b00495acd7","label":"SetVariable","background":"#FF4A1E","canChangeBackground":false}],"id":"9b8a08ec-f5ae-4744-abbb-d370af5578f0","root":false,"$title":"[E.1.0.0][SET] Valida input do usuario","$position":{"top":"765px","left":"1745px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"e08bd49f-b6f7-4e64-afac-dd36b1b569e0":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"704f8e0c-512c-44bd-8610-570d27ba2318","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"b083f021-42de-4a51-8605-230dac5b4e3a","typeOfStateId":"state","$connId":"con_23","$id":"680ab48e-6724-42a4-b347-c8f6bb2b2a94","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"0e4399cb-56e8-4301-bb19-311701963b5f","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} exibicao\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"{{state.name}} exibicao","action":"Exibicao"},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"isAiGenerated":false,"$tags":[{"id":"blip-tag-26d35610-6428-4b02-b257-a307c833e5b0","label":"TrackEvent","background":"#61D36F","canChangeBackground":false}],"id":"e08bd49f-b6f7-4e64-afac-dd36b1b569e0","root":false,"$title":"[E.3.0.0][SET] Periodo identificado","$position":{"top":"987px","left":"1745px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"76b6e794-84d7-4548-9710-e65975a81d34":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"3ab56c8c-b3df-46d0-9b33-f6fa91bac8e2","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"884585d7-6d39-4854-8438-5d7fe0630df6","typeOfStateId":"state","$connId":"con_28","$id":"944c6638-cd58-44cb-a2a1-27c7124716e6","conditions":[{"source":"context","comparison":"notEquals","values":["false"],"variable":"dynamicContent"},{"values":["200"],"source":"context","comparison":"equals","variable":"extratoStatus"}],"$invalid":false},{"stateId":"d5f22b62-ebd0-4752-82c5-11732240a73e","typeOfStateId":"state","$connId":"con_33","$id":"ede67e15-352f-4a28-9e9e-7660b581002c","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"2cfcf407-91cd-40ac-a59d-c7f7641b629b","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} exibicao\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"{{state.name}} exibicao","action":"Exibicao"},"conditions":[]},{"$id":"e8849cb1-e6b5-4936-8c9f-5850f167f6a5","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"encodingUrl\"","$invalid":false,"settings":{"function":"run","source":"function run(clientId, grantType, clientSecret) {\n\n    const URL = `client_id=${clientId}&grant_type=${grantType}&client_secret=${clientSecret}`\n    return URL;\n\n}","inputVariables":["config.clientId","config.grantType","config.clientSecret"],"outputVariable":"encodingUrl","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"66713f58-16e1-42de-b709-9407c1631475","$typeOfContent":"","type":"ProcessHttp","$title":"Process \"bodyToken\" using \"POST\"","$invalid":false,"settings":{"headers":{"Content-Type":"application/x-www-form-urlencoded","accept":"*/*","Connection":"keep-alive","User-Agent":"Fiddler"},"method":"POST","body":"{{encodingUrl}}","uri":"{{config.urlToken}}/api/oauth/token","responseStatusVariable":"statusToken","responseBodyVariable":"bodyToken"},"conditions":[]},{"$id":"630f60c9-cb0a-44c4-92be-58d80e4da31a","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"urlParams\"","$invalid":false,"settings":{"function":"run","source":"function run(data, numeroAgencia, numeroConta) {\n\ttry {\n\t\tconst [dia1, mes1, ano1] = data.split(' - ')[0].split('/')\n\t\tconst [dia2, mes2, ano2] = data.split(' - ')[1].split('/')\n\n\t\tconst dataFormatada1 = `${ano1}-${mes1}-${dia1}`\n\t\tconst dataFormatada2 = `${ano2}-${mes2}-${dia2}`\n\n\t\tconst dataInicial = dataFormatada1 > dataFormatada2 ? dataFormatada2 : dataFormatada1\n\t\tconst dataFinal = dataFormatada1 > dataFormatada2 ? dataFormatada1 : dataFormatada2\n\n\t\treturn `agencia=12400&conta=0064150&dataInicial=${dataInicial}&dataFinal=${dataFinal}&limite=100&pagina=1`\n\t\t// return `agencia=${numeroAgencia}&conta=${numeroConta}&dataInicial=${dataInicial}&dataFinal=${dataFinal}&limite=100&pagina=1`\n\t} catch (err) {\n\t\treturn false\n\t}\n}","inputVariables":["dataExtractor","numeroAgencia","numeroConta"],"outputVariable":"urlParams","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"8a1965c0-ab65-4573-9b21-f65b16981d54","$typeOfContent":"","type":"ProcessHttp","$title":"Process \"extratoResponse\" using \"GET\"","$invalid":false,"settings":{"headers":{"Safra-Correlation-ID":"1","Authorization":"Bearer {{bodyToken@access_token}}"},"method":"GET","uri":"{{config.baseURL}}/vendas-servicos/clientes/dados-contas-clientes/assistente-virtual/v1/extratos?{{urlParams}}","responseStatusVariable":"extratoStatus","responseBodyVariable":"extratoResponse"},"conditions":[]}],"$leavingCustomActions":[{"$id":"83516098-c82a-41de-998a-4ec2b1af81b6","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"dynamicContent\"","$invalid":false,"settings":{"function":"run","source":"const dynamicContent = {\n  \"recipient_type\": \"individual\",\n  \"type\": \"document\",\n  \"document\": {\n    \"link\": \"<MEDIA_URL>\", // REQUIRED - URL of image asset on your public server. For better performance, we recommend that you upload your media asset instead.\n    // \"caption\": \"<DOCUMENT_CAPTION>\", // OPTIONAL - Document caption text.\n    \"filename\": \"<DOCUMENT_FILENAME>\" // OPTIONAL - Document filename, with extension. The WhatsApp client will use an appropriate file type icon based on the extension.\n  }\n}\nfunction run(dataExtractor, extratoResponse) {\n  try {\n    const periodo = dataExtractor.replace(' - ', '_a_').replace(/\\//g, \"-\")\n    const { data } = JSON.parse(extratoResponse)\n    if (!data.urlDocumento) {\n      return false\n    }\n    dynamicContent.document.link = data.urlDocumento\n    // dynamicContent.document.caption = 'teste'\n    dynamicContent.document.filename = `extrato_de_${periodo}.pdf`\n    return dynamicContent\n  } catch (err) {\n    return false\n  }\n}","inputVariables":["dataExtractor","extratoResponse"],"outputVariable":"dynamicContent","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"a1723f75-6012-4036-b264-a7512a847843","$typeOfContent":"","type":"TrackEvent","$title":"Track \"api extrato status\"","$invalid":false,"settings":{"extras":{},"category":"api extrato status","action":"{{extratoStatus}}"},"conditions":[{"values":[],"source":"context","comparison":"exists","variable":"extratoStatus"}]},{"$id":"cdb65961-5f11-404c-9322-4dee980b85fe","$typeOfContent":"","type":"TrackEvent","$title":"Track \"api extrato resumo\"","$invalid":false,"settings":{"extras":{},"category":"api extrato resumo","action":"{{extratoStatus}} | {{config.baseURL}}/vendas-servicos/clientes/dados-contas-clientes/assistente-virtual/v1/extratos?{{urlParams}}"},"conditions":[{"values":[],"source":"context","comparison":"exists","variable":"extratoStatus"}]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"isAiGenerated":false,"$tags":[{"id":"blip-tag-2afa9688-00f2-4bfc-94ba-695349e1bddf","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-e590410b-2eda-4091-866d-449701b7c7c4","label":"ExecuteScript","background":"#FF961E","canChangeBackground":false},{"id":"blip-tag-ab123929-211e-4d85-af2a-c92e6b7fca3b","label":"ProcessHttp","background":"#7762E3","canChangeBackground":false}],"id":"76b6e794-84d7-4548-9710-e65975a81d34","root":false,"$title":"[E.4.1.0][HTTP] Consulta extrato","$position":{"top":"1405px","left":"1745px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"884585d7-6d39-4854-8438-5d7fe0630df6":{"$contentActions":[{"action":{"$id":"66a889b1-7c7d-4aac-a30e-d151b99cba6c","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"19193635-5ea6-42a7-adc3-91dd1b694fc2","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"19193635-5ea6-42a7-adc3-91dd1b694fc2","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"db686289-c01e-42f2-93e5-a3238662e52b","$typeOfContent":"text","type":"SendMessage","settings":{"id":"3166ef49-31b4-423a-8f87-35032384e7ec","type":"text/plain","content":"Aqui está o seu <b>extrato</b>.\n\nPara acessar, toque no PDF abaixo:","metadata":{}},"$cardContent":{"document":{"id":"3166ef49-31b4-423a-8f87-35032384e7ec","type":"text/plain","content":"Aqui está o seu <b>extrato</b>.\n\nPara acessar, toque no PDF abaixo:"},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"input":{"bypass":true,"$cardContent":{"document":{"id":"8e1d538a-5933-4a4a-9036-4d7aa04ada65","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false},{"action":{"$id":"e27d4fd5-b954-491b-b7a9-df6e540863bf","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"6f24a5a4-69b8-457c-8f86-8610cd0f2de8","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":"2000"},"metadata":{"#stateName":"{{state.name}}","#stateId":"{{state.id}}","#messageId":"{{input.message@id}}","#previousStateId":"{{state.previous.id}}","#previousStateName":"{{state.previous.name}}"}},"$cardContent":{"document":{"id":"6f24a5a4-69b8-457c-8f86-8610cd0f2de8","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":"2000"}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"946fe345-d259-4f54-919d-8b7a7f2bf459","$typeOfContent":"raw-content","type":"SendRawMessage","settings":{"metadata":{"#stateName":"{{state.name}}","#stateId":"{{state.id}}","#messageId":"{{input.message@id}}","#previousStateId":"{{state.previous.id}}","#previousStateName":"{{state.previous.name}}"},"type":"application/json","rawContent":"{{dynamicContent}}"}},"$invalid":false},{"action":{"$id":"85e7d928-208f-44dd-8a28-e19467055cc0","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"4f1139ca-98d6-4c18-97a6-4dffdd3a4c9a","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000},"metadata":{"#stateName":"{{state.name}}","#stateId":"{{state.id}}","#messageId":"{{input.message@id}}","#previousStateId":"{{state.previous.id}}","#previousStateName":"{{state.previous.name}}"}},"$cardContent":{"document":{"id":"4f1139ca-98d6-4c18-97a6-4dffdd3a4c9a","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false}],"$conditionOutputs":[{"stateId":"3e2cc1a4-d6b8-47a9-87e8-b3deb9a601fd","typeOfStateId":"state","$connId":"con_38","$id":"22634082-007b-49f5-9b13-544bb1347db7","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"d4811975-da06-4518-8964-ab7a6ee4680a","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} exibicao\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"{{state.name}} exibicao","action":"Exibicao"},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"isAiGenerated":false,"$tags":[{"id":"blip-tag-365f034b-113a-42de-a001-03cd5df47d87","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-0a8f461b-6490-430c-8e6d-53f7e4ff0088","label":"SendMessage","background":"#EE82EE","canChangeBackground":false}],"id":"884585d7-6d39-4854-8438-5d7fe0630df6","root":false,"$title":"[E.5.0.0][MSG] Exibição extrato","$position":{"top":"1405px","left":"1974px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"b083f021-42de-4a51-8605-230dac5b4e3a":{"$contentActions":[{"action":{"$id":"633675c8-7a6d-45c5-86f3-ce1c04d04196","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"5ea1ff55-4140-42cf-b17e-24577120f0ed","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"5ea1ff55-4140-42cf-b17e-24577120f0ed","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"7f7bcdea-8fd6-490f-93fb-ce8f62bdf36e","$typeOfContent":"text","type":"SendMessage","settings":{"id":"00b1a9ed-0159-4d2d-a1ee-32c3d7dc9118","type":"text/plain","content":"Aguarde só um instante, estou consultando o seu <b>extrato</b>.","metadata":{}},"$cardContent":{"document":{"id":"00b1a9ed-0159-4d2d-a1ee-32c3d7dc9118","type":"text/plain","content":"Aguarde só um instante, estou consultando o seu <b>extrato</b>."},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"input":{"bypass":true,"$cardContent":{"document":{"id":"abb5c1ba-bbc4-44dd-9823-a78707e6d1bf","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"76b6e794-84d7-4548-9710-e65975a81d34","typeOfStateId":"state","$connId":"con_43","$id":"03ebdbc4-ab30-4e7d-9c34-3fb48fce1052","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"6b5359c0-a052-478f-b98b-bd80348a8477","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} exibicao\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"{{state.name}} exibicao","action":"Exibicao"},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"isAiGenerated":false,"$tags":[{"id":"blip-tag-b4c555a7-2e55-49d1-ba30-c0a16f6c3ea7","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-9f56bce9-16e0-42b0-a279-bbc57945da40","label":"SendMessage","background":"#EE82EE","canChangeBackground":false}],"id":"b083f021-42de-4a51-8605-230dac5b4e3a","root":false,"$title":"[E.4.0.0][MSG] Aguarde um momento","$position":{"top":"1189px","left":"1745px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"d5f22b62-ebd0-4752-82c5-11732240a73e":{"$contentActions":[{"action":{"$id":"a804ba8e-7026-4127-ba79-b61b3fdc97b7","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"d5774906-3788-4685-ae2f-40eb83a1a17d","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"d5774906-3788-4685-ae2f-40eb83a1a17d","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"19402eea-81a2-416a-a6db-1aacc05083e3","$typeOfContent":"text","type":"SendMessage","settings":{"id":"da7da2bc-3b5e-4044-b44f-aecde01fe51b","type":"text/plain","content":"Não encontrei lançamentos para este período.\n\nCaso queira consultar outro período, basta digitar o período desejado.","metadata":{}},"$cardContent":{"document":{"id":"da7da2bc-3b5e-4044-b44f-aecde01fe51b","type":"text/plain","content":"Não encontrei lançamentos para este período.\n\nCaso queira consultar outro período, basta digitar o período desejado."},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"c9265778-c76e-45c0-9f5e-d249347b1c04","type":"text/plain","textContent":"Entrada do usuário","content":"User input"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"0:15"},"$invalid":false}],"$conditionOutputs":[{"stateId":"8c0cfef9-956f-4171-bc66-5d560aaf7a86","typeOfStateId":"state","$connId":"con_48","$id":"11d5f4ba-61e0-4f48-bccf-74032656e92d","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"84cde0c7-f8fa-4302-a250-e51cdc7f8a0f","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} exibicao\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"{{state.name}} exibicao","action":"Exibicao"},"conditions":[]}],"$leavingCustomActions":[{"$id":"6883924d-557f-40b3-a53e-c9b1d745356d","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} input\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"{state.name} input","action":"{{input.content}}"},"conditions":[{"comparison":"exists","source":"context","values":[],"variable":"input.content"}]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"isAiGenerated":false,"$tags":[{"id":"blip-tag-767ff2ca-3071-4da7-a8e0-c6c857ad36fb","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-64add1b9-cbbb-4984-b6ff-fefae04e1fe4","label":"SendMessage","background":"#EE82EE","canChangeBackground":false},{"id":"blip-tag-e4e98263-3cec-44c0-a454-a11d79bfd9e9","label":"UserInput","background":"#000000","canChangeBackground":false}],"id":"d5f22b62-ebd0-4752-82c5-11732240a73e","root":false,"$title":"[E.6.0.0][MSG] Sem extratos no periodo","$position":{"top":"1572px","left":"1745px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"3e2cc1a4-d6b8-47a9-87e8-b3deb9a601fd":{"$contentActions":[{"action":{"$id":"afb90785-00b8-4bc8-a03a-67212fe4382c","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"128f841c-db00-40ec-b819-c446c1668ef6","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"128f841c-db00-40ec-b819-c446c1668ef6","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"d1c1f054-b955-4ee2-8445-6f6cd2a1ab24","$typeOfContent":"text","type":"SendMessage","settings":{"id":"7e3f42fc-2434-4924-b1b7-124ef0cf2797","type":"text/plain","content":"Você precisa de mais alguma coisa?","metadata":{}},"$cardContent":{"document":{"id":"7e3f42fc-2434-4924-b1b7-124ef0cf2797","type":"text/plain","content":"Você precisa de mais alguma coisa?"},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"69d81efb-3989-4316-9b78-f3e63b049dd1","type":"text/plain","textContent":"Entrada do usuário","content":"User input"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"0:15"},"$invalid":false}],"$conditionOutputs":[{"stateId":"7e580bad-7a12-4ffe-a3d5-ef00e36097a7","typeOfStateId":"state","$connId":"con_53","$id":"5a640a39-a001-4a0c-a486-95004b19d82f","conditions":[{"source":"input","comparison":"exists","values":[]},{"values":[],"source":"context","comparison":"notExists","variable":"dataExtractor@error"}],"$invalid":false},{"stateId":"445ecc89-ebef-450e-b988-963d47656391","typeOfStateId":"state","$connId":"con_58","$id":"d386b35d-00a4-4106-b2ec-23d3aa0eeeac","conditions":[{"source":"input","comparison":"exists","values":[]},{"source":"intent","comparison":"equals","values":["extratos"]}],"$invalid":false},{"stateId":"9b613c1d-ec20-42c6-b4ba-5d98f161cd03","typeOfStateId":"state","$connId":"con_63","$id":"9303b752-49d7-42cc-b19f-44e6eb59c915","conditions":[{"source":"input","comparison":"exists","values":[]},{"values":["Negation"],"source":"context","comparison":"contains","variable":"SmallTalksIdentified"}],"$invalid":false},{"stateId":"47cc3fef-4aae-4869-bf2d-d2f67d37ec54","typeOfStateId":"state","$connId":"con_68","$id":"34333740-c3e8-4c1c-9460-2cd6030a56ef","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"1994a3d1-8d4f-4d34-a061-84f7b90be034","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} exibicao\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"{{state.name}} exibicao","action":"Exibicao"},"conditions":[]}],"$leavingCustomActions":[{"$id":"4c741be9-0dd3-48b7-9879-1b2c7f57cbd7","$typeOfContent":"","type":"ProcessHttp","$title":"Process \"bodySmallTlaks\" using \"GET\"","$invalid":false,"settings":{"headers":{},"method":"GET","uri":"https://smalltalksapi.cs.blip.ai/api/v3/analysis?text={{input.content}}&checkDate=false&infoLevel=3","responseStatusVariable":"statusSmallTalks","responseBodyVariable":"bodySmallTalks"},"conditions":[{"values":[],"source":"input","comparison":"exists"}]},{"$id":"56d9576d-a28e-4191-9e69-8f6cbffde555","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"SmallTalksIdentified\"","$invalid":false,"settings":{"function":"run","source":"function run(bodySmallTalks) {\n\ttry {\n\t\tlet data = JSON.parse(bodySmallTalks);\n\t\tif (data && data.analysis && data.analysis.matches) {\n\t\t\treturn data.analysis.matches.map(match => match.smallTalk);\n\t\t}\n\t\treturn [];\n\t}\n\tcatch (err) {\n\t\treturn [];\n\t}\n}","inputVariables":["bodySmallTalks"],"outputVariable":"SmallTalksIdentified","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"a8c0b0f8-c6e7-4751-80c2-d805d2e30be6","$typeOfContent":"","type":"TrackEvent","$title":"Track \"ajudo com algo mais intencao nao identificada\"","$invalid":false,"settings":{"extras":{},"category":"ajudo com algo mais intencao nao identificada","action":"{{input.content}}"},"conditions":[{"values":[],"source":"intent","comparison":"notExists"},{"comparison":"exists","source":"context","values":[],"variable":"input.content"}]},{"$id":"631d1bc5-0bfb-465a-9ace-d1de40c06fb5","$typeOfContent":"","type":"TrackEvent","$title":"Track \"ajudo com algo mais intecao identificada\"","$invalid":false,"settings":{"extras":{},"category":"ajudo com algo mais intencao identificada","action":"{{input.intent.name}}"},"conditions":[{"values":[],"source":"context","comparison":"exists","variable":"input.intent.name"}]},{"$id":"ba47a1a8-7e65-4e6e-8739-a7bf02297ddd","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"dataExtractor\"","$invalid":false,"settings":{"function":"run","source":"function run(input) {\n    try {\n        const months = {\n            janeiro: '01', fevereiro: '02', março: '03', abril: '04', maio: '05', junho: '06',\n            julho: '07', agosto: '08', setembro: '09', outubro: '10', novembro: '11', dezembro: '12',\n            jan: '01', fev: '02', mar: '03', abr: '04', mai: '05', jun: '06', jul: '07', ago: '08',\n            set: '09', out: '10', nov: '11', dez: '12'\n        };\n        const monthsRegex = '(janeiro|jan|fevereiro|fev|março|mar|abril|abr|maio|mai|junho|jun|julho|jul|agosto|ago|setembro|set|outubro|out|novembro|nov|dezembro|dez)';\n        const numbersInWords = {\n            um: 1, dois: 2, três: 3, quatro: 4, cinco: 5, seis: 6, sete: 7, oito: 8, nove: 9,\n            dez: 10, onze: 11, doze: 12, treze: 13, quatorze: 14, quinze: 15, dezesseis: 16, dezessete: 17,\n            dezoito: 18, dezenove: 19, vinte: 20, \"vinte e um\": 21, \"vinte e dois\": 22, \"vinte e três\": 23,\n            \"vinte e quatro\": 24, \"vinte e cinco\": 25, \"vinte e seis\": 26, \"vinte e sete\": 27, \"vinte e oito\": 28,\n            \"vinte e nove\": 29, trinta: 30, \"trinta e um\": 31, \"trinta e dois\": 32, \"trinta e três\": 33,\n            \"trinta e quatro\": 34, \"trinta e cinco\": 35, \"trinta e seis\": 36, \"trinta e sete\": 37,\n            \"trinta e oito\": 38, \"trinta e nove\": 39, quarenta: 40, \"quarenta e um\": 41, \"quarenta e dois\": 42,\n            \"quarenta e três\": 43, \"quarenta e quatro\": 44, \"quarenta e cinco\": 45, \"quarenta e seis\": 46,\n            \"quarenta e sete\": 47, \"quarenta e oito\": 48, \"quarenta e nove\": 49, cinquenta: 50,\n            \"cinquenta e um\": 51, \"cinquenta e dois\": 52, \"cinquenta e três\": 53, \"cinquenta e quatro\": 54,\n            \"cinquenta e cinco\": 55, \"cinquenta e seis\": 56, \"cinquenta e sete\": 57, \"cinquenta e oito\": 58,\n            \"cinquenta e nove\": 59, sessenta: 60, \"sessenta e um\": 61, \"sessenta e dois\": 62,\n            \"sessenta e três\": 63, \"sessenta e quatro\": 64, \"sessenta e cinco\": 65, \"sessenta e seis\": 66,\n            \"sessenta e sete\": 67, \"sessenta e oito\": 68, \"sessenta e nove\": 69, setenta: 70, \"setenta e um\": 71,\n            \"setenta e dois\": 72, \"setenta e três\": 73, \"setenta e quatro\": 74, \"setenta e cinco\": 75,\n            \"setenta e seis\": 76, \"setenta e sete\": 77, \"setenta e oito\": 78, \"setenta e nove\": 79, oitenta: 80,\n            \"oitenta e um\": 81, \"oitenta e dois\": 82, \"oitenta e três\": 83, \"oitenta e quatro\": 84,\n            \"oitenta e cinco\": 85, \"oitenta e seis\": 86, \"oitenta e sete\": 87, \"oitenta e oito\": 88,\n            \"oitenta e nove\": 89, noventa: 90\n        };\n\n\n        const currentDate = new Date();\n        const currentMonth = currentDate.getMonth();\n        const currentYear = currentDate.getFullYear();\n        const ninetyDaysInMillis = 90 * 24 * 60 * 60 * 1000;\n\n        function parseDate(dateStr) {\n            let [day, month, year] = dateStr.split('/');\n            day = day.padStart(2, '0');\n            month = month.padStart(2, '0');\n            year = year ? (year.length === 2 ? '20' + year : year) : currentDate.getFullYear();\n            return new Date(year, month - 1, day);\n        }\n\n        function formatDate(date) {\n            const day = String(date.getDate()).padStart(2, '0');\n            const month = String(date.getMonth() + 1).padStart(2, '0');\n            const year = date.getFullYear();\n            return `${day}/${month}/${year}`;\n        }\n\n        function getMonthNumber(monthName) {\n            return months[monthName.toLowerCase()];\n        }\n\n        function getNumberFromWords(word) {\n            return numbersInWords[word.toLowerCase()];\n        }\n\n        function extractDates(text) {\n            text = text.toLowerCase();\n\n            // Verifica ultimos X dias\n            let match = text.match(/[uú]ltimos (\\d{1,4}) dias/i);\n            if (match) {\n                const numberOfDays = parseInt(match[1], 10);\n                const endDate = currentDate;\n                const startDate = new Date(endDate.getTime() - numberOfDays * 24 * 60 * 60 * 1000);\n                return ([startDate, endDate]);\n            }\n\n            // Verifica ultimos X dias por extenso\n            match = text.match(new RegExp(`últimos (${Object.keys(numbersInWords).join('|')}) dias`, 'i'));\n            if (match) {\n                const numberOfDays = getNumberFromWords(match[1]);\n                const endDate = currentDate;\n                const startDate = new Date(endDate.getTime() - numberOfDays * 24 * 60 * 60 * 1000);\n                return ([startDate, endDate]);\n            }\n\n            // Verifica intervalos de meses por extenso e dias numéricos\n            match = text.match(new RegExp(`(\\\\d{1,2}) de (${monthsRegex}) (at[eé]|a) (\\\\d{1,2}) de (${monthsRegex})`, 'i'));\n            if (match) {\n                let startDay = match[1].padStart(2, '0');\n                let endDay = match[5].padStart(2, '0');\n                const startMonth = getMonthNumber(match[2]);\n                const endMonth = getMonthNumber(match[6]);\n                const year = currentDate.getFullYear();\n                const startDate = parseDate(`${startDay}/${startMonth}/${year}`);\n                const endDate = parseDate(`${endDay}/${endMonth}/${year}`);\n                return [startDate, endDate];\n            }\n\n            // Verifica intervalos de meses por extenso\n            match = text.match(new RegExp(`de (${monthsRegex}) (at[eé]|a) (${monthsRegex})`, 'i'));\n            if (match) {\n                const startMonth = getMonthNumber(match[1]);\n                const endMonth = getMonthNumber(match[5]);\n                const year = currentDate.getFullYear();\n                const startDate = parseDate(`01/${startMonth}/${year}`);\n                const endDate = new Date(year, parseInt(endMonth, 10), 0);\n                return [startDate, endDate];\n            }\n\n            // Verifica frases com mês por extenso\n            match = text.match(new RegExp('de (' + monthsRegex + ')', 'i'));\n            if (match) {\n                const month = getMonthNumber(match[1]);\n                const year = currentDate.getFullYear();\n                const startDate = parseDate(`01/${month}/${year}`);\n                const endDate = new Date(year, parseInt(month, 10), 0);\n                if (currentDate.getMonth() + 1 === parseInt(month, 10)) {\n                    // Se o mês solicitado é o mês atual\n                    return [startDate, currentDate];\n                }\n                return [startDate, endDate];\n            }\n\n            // Verifica intervalos no formato DD/MM até DD/MM\n            match = text.match(/(\\d{1,2}\\/\\d{1,2}) (at[eé]|a) (\\d{1,2}\\/\\d{1,2})/i);\n            if (match) {\n                const year = currentDate.getFullYear();\n                return [parseDate(`${match[1]}/${year}`), parseDate(`${match[3]}/${year}`)];\n            }\n\n            // Verifica intervalos no formato MM/AAAA até MM/AAAA\n            match = text.match(/(\\d{1,2}\\/\\d{4}) (at[eé]|a) (\\d{1,2}\\/\\d{4})/i);\n            if (match) {\n                const [endMonth, endYear] = match[3].split('/');\n                const endDate = new Date(endYear, endMonth, 0); // O dia 0 do próximo mês é o último dia do mês anterior\n                const lastDay = endDate.getDate();\n\n                return [parseDate(`01/${match[1]}`), parseDate(`${lastDay}/${match[3]}`)];\n            }\n\n            // Verifica data no formato \"dia D\"\n            match = text.match(/dia (\\d{1,2})/i);\n            if (match) {\n                const day = match[1].padStart(2, '0');\n                const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n                const year = currentDate.getFullYear();\n                return [parseDate(`${day}/${month}/${year}`)];\n            }\n\n            // Verifica último mês ou mês passado\n            match = text.match(/([úu]ltimo|m[eê]s) passad(o)/i);\n            if (match) {\n                const lastMonthStartDate = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);\n                const lastMonthEndDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0);\n                return [lastMonthStartDate, lastMonthEndDate];\n            }\n\n            // Verifica \"dessa semana\" ou \"essa semana\"\n            match = text.match(/(dessa semana|essa semana)/i);\n            if (match) {\n                const weekStartDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - currentDate.getDay() + 1);\n                return [weekStartDate, currentDate];\n            }\n\n            // Verifica semana passada\n            match = text.match(/semana passada/i);\n            if (match) {\n                const lastWeekEndDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - currentDate.getDay());\n                const lastWeekStartDate = new Date(lastWeekEndDate.getFullYear(), lastWeekEndDate.getMonth(), lastWeekEndDate.getDate() - 6);\n                return [lastWeekStartDate, lastWeekEndDate];\n            }\n\n            // Verifica semana retrasada\n            match = text.match(/semana retrasada/i);\n            if (match) {\n                const twoWeeksAgoEndDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - currentDate.getDay() - 7);\n                const twoWeeksAgoStartDate = new Date(twoWeeksAgoEndDate.getFullYear(), twoWeeksAgoEndDate.getMonth(), twoWeeksAgoEndDate.getDate() - 6);\n                return [twoWeeksAgoStartDate, twoWeeksAgoEndDate];\n            }\n\n            // Verifica deste mês\n            match = text.match(/[d]?esse m[eê]s|m[eê]s atual/i);\n            if (match) {\n                const thisMonthStartDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n                return [thisMonthStartDate, currentDate];\n            }\n\n            // Verifica último trimestre ou trimestre passado\n            match = text.match(/([úu]ltim(a|o)|trimestre) (passad(a|o)|trimestre)/i);\n            if (match) {\n                const currentQuarter = Math.floor(currentMonth / 3) + 1;\n                let lastQuarter, lastQuarterYear;\n                if (currentQuarter === 1) {\n                    lastQuarter = 4;\n                    lastQuarterYear = currentYear - 1;\n                } else {\n                    lastQuarter = currentQuarter - 1;\n                    lastQuarterYear = currentYear;\n                }\n                const startMonthX = (lastQuarter - 1) * 3;\n                const endMonthX = startMonthX + 2;\n                const lastQuarterStartDate = new Date(lastQuarterYear, startMonthX, 1);\n                const lastQuarterEndDate = new Date(lastQuarterYear, endMonthX + 1, 0);\n                return [lastQuarterStartDate, lastQuarterEndDate];\n            }\n\n            // Verifica último bimestre ou bimestre passado\n            match = text.match(/([úu]ltim(a|o)|bimestre) (passad(a|o)|bimestre)/i);\n            if (match) {\n                const currentBimester = Math.floor(currentMonth / 2) + 1;\n                let lastBimester, lastBimesterYear;\n                if (currentBimester === 1) {\n                    lastBimester = 6;\n                    lastBimesterYear = currentYear - 1;\n                } else {\n                    lastBimester = currentBimester - 1;\n                    lastBimesterYear = currentYear;\n                }\n                const startMonth = (lastBimester - 1) * 2;\n                const endMonth = startMonth + 1;\n                const lastBimesterStartDate = new Date(lastBimesterYear, startMonth, 1);\n                const lastBimesterEndDate = new Date(lastBimesterYear, endMonth + 1, 0);\n                return [lastBimesterStartDate, lastBimesterEndDate];\n            }\n\n            // Verifica X dias\n            match = text.match(/(\\d{1,4}) dias/i);\n            if (match) {\n                const numberOfDays = parseInt(match[1], 10);\n                const endDate = currentDate;\n                const startDate = new Date(endDate.getTime() - numberOfDays * 24 * 60 * 60 * 1000);\n                return ([startDate, endDate]);\n            }\n\n            // Verifica X dias por extenso\n            match = text.match(new RegExp(`(${Object.keys(numbersInWords).join('|')}) dias`, 'i'));\n            if (match) {\n                const numberOfDays = getNumberFromWords(match[1]);\n                const endDate = currentDate;\n                const startDate = new Date(endDate.getTime() - numberOfDays * 24 * 60 * 60 * 1000);\n                return ([startDate, endDate]);\n            }\n\n            // Verifica hoje\n            match = text.match(/de hoje|(hoje)/i);\n            if (match) {\n                return [currentDate, currentDate];\n            }\n\n            // Verifica ontem\n            match = text.match(/de ontem|(ontem)/i);\n            if (match) {\n                let yesterday = new Date();\n                yesterday.setDate(yesterday.getDate() - 1);\n                return [yesterday, yesterday];\n            }\n\n            // Verifica datas no formato DD/MM/AAAA\n            match = text.match(/(\\d{1,2}\\/\\d{1,2}\\/\\d{2,4})/g);\n            if (match) return match.map(date => parseDate(date));\n\n            // Verifica datas no formato DD/MM\n            match = text.match(/(\\d{1,2}\\/\\d{1,2})/g);\n            if (match) {\n                return match.map(dateStr => parseDate(`${dateStr}/${currentDate.getFullYear()}`));\n            }\n\n            return [];\n        }\n\n        const dates = extractDates(input);\n\n        if (dates.length === 1) {\n            const startDate = dates[0];\n            const endDate = new Date();\n            const diffInMillis = endDate - startDate;\n            if (diffInMillis < 0 || startDate > endDate) {\n                return { error: 'extratoLancamentoFuturo' };\n            }\n            return formatDate(dates[0]);\n        } else if (dates.length === 2) {\n            const actualDate = new Date();\n            const startDate = dates[0];\n            const endDate = dates[1];\n            const diffInMillis = endDate - startDate;\n            if (diffInMillis < 0 || startDate > actualDate || endDate > actualDate) {\n                return { error: 'extratoLancamentoFuturo' };\n            }\n            if (diffInMillis <= ninetyDaysInMillis) {\n                return `${formatDate(startDate)} - ${formatDate(endDate)}`;\n            } else {\n                return { error: 'extrato90dias' };\n            }\n        } else {\n            return { error: 'extratoDataInvalida' };\n        }\n    } catch (err) {\n        return { error: 'extratoDataInvalida' };\n    }\n}","inputVariables":["input.content"],"outputVariable":"dataExtractor","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"2a69e8e7-6ac9-475d-86f4-76d08f4a6fe5","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} user input\"","$invalid":false,"settings":{"extras":{},"category":"{{state.name}} user input","action":"{{input.content}}"},"conditions":[{"comparison":"exists","source":"context","values":[],"variable":"input.content"}]},{"$id":"89c7c0d4-8345-4b4d-ac29-ba2a5619dbc2","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} smalltalks\"","$invalid":false,"settings":{"extras":{},"category":"{{state.name}} smalltalks","action":"{{SmallTalksIdentified}}"},"conditions":[{"values":[],"source":"context","comparison":"exists","variable":"SmallTalksIdentified"}]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"id":"blip-tag-dda1c320-1d63-4293-88e0-73686d0fc636","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-9ea44b5c-3400-4bc7-ad8b-1e17a8d360ba","label":"ProcessHttp","background":"#7762E3","canChangeBackground":false},{"id":"blip-tag-e7263cbc-b896-4c4a-9ef0-5ad73cd62224","label":"ExecuteScript","background":"#FF961E","canChangeBackground":false},{"id":"blip-tag-115d5af8-fdcd-469d-9801-b8330b684160","label":"SendMessage","background":"#EE82EE","canChangeBackground":false},{"id":"blip-tag-6c9d5054-0f89-4662-ac01-2f0ada2f5159","label":"UserInput","background":"#000000","canChangeBackground":false}],"id":"3e2cc1a4-d6b8-47a9-87e8-b3deb9a601fd","root":false,"$title":"[E.5.1.0][MSG] Ajudo com algo mais?","$position":{"top":"1393px","left":"2210px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"9b613c1d-ec20-42c6-b4ba-5d98f161cd03":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"15f5d27b-bf79-4926-95f0-7a8b78b670fc","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[{"$id":"e9784b75-826e-4096-8f43-445acef14fb7","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} exibicao\"","$invalid":false,"settings":{"extras":{},"category":"{{state.name}} exibicao","action":"exibicao"},"conditions":[]},{"$id":"bc72a30c-7fc1-4deb-98a8-b044f7bc1554","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"state\"","$invalid":false,"settings":{"function":"run","source":"function run(previousBlockid, previousStateName, lastInput, intent, serviceName, env) {\n\ttry {\n\t\treturn {\n\t\t\tbotOrigin: serviceName,\n\t\t\tstateOrigin: previousBlockid,\n\t\t\tstateNameOrigin: previousStateName,\n\t\t\tbotDestination: `principal ${env || ''}`.trim(),\n\t\t\tstateDestination: 'eddeb205-5810-40e9-9d0d-69b714415542',//Finalização\n\t\t\tlastInput: lastInput || intent,\n\t\t\tintent: intent  || lastInput\n\t\t}\n\t} catch (err) {\n\t\treturn {\n\t\t\tbotOrigin: serviceName,\n\t\t\tstateOrigin: previousBlockId,\n\t\t\tbotDestination: `principal ${env||''}`.trim(),\n\t\t\tstateDestination: 'welcome',\n\t\t\tlastInput: lastInput || intent,\n\t\t\terror: err.message\n\t\t}\n\t}\n}","inputVariables":["state.previous.id","state.previous.name","input.content","userInput","config.serviceName","config.env"],"outputVariable":"state","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"0ade9ee2-d502-4b9a-9e17-3e26bfd62552","$typeOfContent":"","type":"SetVariable","$title":"Set \"SmallTalksIdentified\" CLEAR","$invalid":false,"settings":{"variable":"SmallTalksIdentified","value":"-"},"conditions":[]}],"$leavingCustomActions":[{"$id":"588a9318-737e-4d3c-9f00-c006b2bca353","type":"Redirect","$title":"Redirect to {service} sending {lastInput}","$invalid":false,"settings":{"context":{"type":"text/plain","value":"{{state@lastInput}}"},"address":"{{state@botDestination}}"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"onboarding","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"id":"blip-tag-7760f776-0232-48e1-a21a-c63d23fdcba7","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-bfebfd79-6884-42b5-8f1c-b1fd5eebf584","label":"ExecuteScript","background":"#FF961E","canChangeBackground":false},{"id":"blip-tag-a778f187-c18b-4a77-8340-b2d3fccdc43a","label":"SetVariable","background":"#FF4A1E","canChangeBackground":false},{"id":"blip-tag-5f1c9db3-3ac4-464f-84f1-a0608c9e4014","label":"Redirect","background":"#1EA1FF","canChangeBackground":false}],"id":"9b613c1d-ec20-42c6-b4ba-5d98f161cd03","root":false,"$title":"[Redirect] to finalização","$position":{"top":"1701px","left":"2099.71px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"8c0cfef9-956f-4171-bc66-5d560aaf7a86":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"e45cb196-422d-42dc-9dd4-0f596f11e4ba","type":"text/plain","textContent":"User input","content":"User Input"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"9b8a08ec-f5ae-4744-abbb-d370af5578f0","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[],"id":"8c0cfef9-956f-4171-bc66-5d560aaf7a86","root":false,"$title":"[GO TO][E.1.0.0][SET] Valida input","$position":{"top":"1760px","left":"1745px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"f11abff4-9b22-4711-b3e0-85af93d51218":{"$contentActions":[{"action":{"$id":"c2e2aa97-b7f7-4109-aa5e-b5f8ff075ebb","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"4d12f446-d63a-4c9c-8bd5-b2af1809a3a3","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"4d12f446-d63a-4c9c-8bd5-b2af1809a3a3","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"31a774e3-1d14-4de6-bf94-f2e868f9f018","$typeOfContent":"text","type":"SendMessage","settings":{"id":"e61f666f-8acf-4b5e-8d09-6fda3d44d0c8","type":"text/plain","content":"Certo, você deseja falar sobre <b>extrato</b>. Informe o período desejado.\n\nComo neste exemplo:\n30 dias\n\nLembre-se: por aqui, é possível consultar <b>extratos</b> em um período de até 90 dias.","metadata":{}},"$cardContent":{"document":{"id":"e61f666f-8acf-4b5e-8d09-6fda3d44d0c8","type":"text/plain","content":"Certo, você deseja falar sobre <b>extrato</b>. Informe o período desejado.\n\nComo neste exemplo:\n30 dias\n\nLembre-se: por aqui, é possível consultar <b>extratos</b> em um período de até 90 dias."},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"c3010671-a4a8-40a4-bba4-45ecfb8bf0dc","type":"text/plain","textContent":"Entrada do usuário","content":"User input"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"0:15"},"$invalid":false}],"$conditionOutputs":[{"stateId":"9b8a08ec-f5ae-4744-abbb-d370af5578f0","typeOfStateId":"state","$connId":"con_73","$id":"7d932bee-eec1-4f19-af13-fb5eab80f880","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"c42adbc3-7434-4ba0-bdce-f7172bacdf40","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} exibicao\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"{{state.name}} exibicao","action":"Exibicao"},"conditions":[]}],"$leavingCustomActions":[{"$id":"69e4094c-6b73-4d36-9f82-de14b9701e33","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} user input\"","$invalid":false,"settings":{"extras":{},"category":"{{state.name}} user input","action":"{{input.content}}"},"conditions":[{"comparison":"exists","source":"context","values":[],"variable":"input.content"}]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"isAiGenerated":false,"$tags":[{"id":"blip-tag-2fd8f7da-dd47-4326-8f28-64a95880782f","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-49430c43-edad-4231-9f49-0070ca949ffa","label":"SendMessage","background":"#EE82EE","canChangeBackground":false},{"id":"blip-tag-33a1c464-3095-4ee8-9aa2-6294e99409ee","label":"UserInput","background":"#000000","canChangeBackground":false}],"id":"f11abff4-9b22-4711-b3e0-85af93d51218","root":false,"$title":"[E.2.0.0] Pergunta periodo","$position":{"top":"776px","left":"2028px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"a17af4c7-78af-45ea-aec4-6fc939ad004b":{"$contentActions":[{"input":{"bypass":false,"$cardContent":{"document":{"id":"b55d1684-e563-4de9-85d5-70341685dad5","type":"text/plain","textContent":"Entrada do usuário","content":"User input"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"0:15"},"$invalid":false}],"$conditionOutputs":[{"stateId":"9b8a08ec-f5ae-4744-abbb-d370af5578f0","typeOfStateId":"state","$connId":"con_78","$id":"741d7b9e-562a-49cd-b501-1e01f50bf5ae","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"a132817d-de8f-4af8-917a-a55f662fd811","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} exibicao\"","$invalid":false,"settings":{"extras":{"identity":"{{contact.identity}}"},"category":"{{state.name}} exibicao","action":"Exibicao"},"conditions":[]}],"$leavingCustomActions":[{"$id":"fd20f50c-cd6b-4479-a329-64141a258b6c","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} user input\"","$invalid":false,"settings":{"extras":{},"category":"{{state.name}} user input","action":"{{input.content}}"},"conditions":[{"comparison":"exists","source":"context","values":[],"variable":"input.content"}]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"isAiGenerated":false,"$tags":[{"id":"blip-tag-90edea97-46fa-4a72-9ea6-b2727e62c9b2","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-4170dc62-c327-4629-aebf-a195cf56b81c","label":"UserInput","background":"#000000","canChangeBackground":false}],"id":"a17af4c7-78af-45ea-aec4-6fc939ad004b","root":false,"$title":"[E.1.0.1][INPUT] Retorno exception","$position":{"top":"777px","left":"1492px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"e4c1acf3-e610-4d60-8a8c-771c988209d3":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"cede0f5a-5453-45c2-a4fd-e95e478bdd14","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[{"$id":"c7eb5b06-ca45-4d7e-be53-b9e17da7fd6d","type":"Redirect","$title":"Redirect to {service} sending {lastInput}","$invalid":false,"settings":{"context":{"type":"text/plain","value":"{{state@lastInput}}"},"address":"{{state@botDestination}}"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"onboarding","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"id":"blip-tag-3f3fddf5-91b0-4b0b-922d-d2837914adba","label":"Redirect","background":"#1EA1FF","canChangeBackground":false}],"id":"e4c1acf3-e610-4d60-8a8c-771c988209d3","root":false,"$title":"[Redirect] to cascata","$position":{"top":"40px","left":"2470px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"445ecc89-ebef-450e-b988-963d47656391":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"5e3dff88-732d-49e0-a871-de5bc5155b2a","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"9b8a08ec-f5ae-4744-abbb-d370af5578f0","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[],"id":"445ecc89-ebef-450e-b988-963d47656391","root":false,"$title":"[GO TO][E.1.0.0] Valida input do usuario","$position":{"top":"1706.86px","left":"2313.14px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"47cc3fef-4aae-4869-bf2d-d2f67d37ec54":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"710a9f46-ee82-4c97-8c31-fdfd4b76211c","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[{"$id":"6f119397-4e4f-4995-9028-08c058309c13","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} exibicao\"","$invalid":false,"settings":{"extras":{},"category":"{{state.name}} exibicao","action":"exibicao"},"conditions":[]},{"$id":"87b511df-7ad1-491d-b719-4c6a1abf9e88","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"state\"","$invalid":false,"settings":{"function":"run","source":"function run(previousBlockid, previousStateName, lastInput, intent, serviceName, env) {\n\ttry {\n\t\tlet match = previousStateName.match(/\\[(.*?)\\]/);\n\t\tlet stateNameOrigin = match ? match[1] : previousStateName;\n\t\treturn {\n\t\t\tbotOrigin: serviceName,\n\t\t\tstateOrigin: previousBlockid,\n\t\t\tstateNameOrigin,\n\t\t\tbotDestination: `cascata ${env || \"\"}`.trim(),\n\t\t\tstateDestination: 'welcome',\n\t\t\tlastInput: lastInput || intent,\n\t\t\tintent\n\t\t}\n\t} catch (err) {\n\t\treturn {\n\t\t\tbotOrigin: serviceName,\n\t\t\tstateOrigin: previousBlockid,\n\t\t\t// stateNameOrigin: previousStateName.replace(/.*\\[(.*?)\\].*/, '$1'),\n\t\t\tbotDestination: `Bot Main ${env || \"\"}`.trim(),\n\t\t\tstateDestination: 'welcome',\n\t\t\tlastInput: lastInput || intent,\n\t\t\terror: err.message,\n\t\t}\n\t}\n}","inputVariables":["state.previous.id","state.previous.name","input.content","userInput","config.serviceName","config.env"],"outputVariable":"state","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"0ac1b0c6-3b2d-423b-b8f1-ab5ee034e2ed","$typeOfContent":"","type":"SetVariable","$title":"Set \"exceptionType\" to \"contatoGerente\"","$invalid":false,"settings":{"variable":"exceptionType","value":"contatoGerente"},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"e4c1acf3-e610-4d60-8a8c-771c988209d3","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"id":"blip-tag-33b34d92-4377-4348-8ba8-a156c64b0c65","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-5dee2f7f-1596-42bf-86bc-98871ea1c3c4","label":"ExecuteScript","background":"#FF961E","canChangeBackground":false},{"id":"blip-tag-26f3099d-3a66-4a51-9c1e-1f099020fe3e","label":"SetVariable","background":"#FF4A1E","canChangeBackground":false}],"id":"47cc3fef-4aae-4869-bf2d-d2f67d37ec54","root":false,"$title":"[GO TO][Redirect] to cascata","$position":{"top":"1405px","left":"2470px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"a7b2633e-0182-4fc9-974e-95ce808e60dc":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"54fae3fa-ae12-476c-99e4-18601c9a09c8","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"9b8a08ec-f5ae-4744-abbb-d370af5578f0","typeOfStateId":"state","$connId":"con_83","$id":"bf383108-d6e9-4081-8179-c413cabfb401","conditions":[{"source":"input","comparison":"exists","values":[]},{"values":["false"],"source":"context","comparison":"equals","variable":"config.autenticacao"}],"$invalid":false},{"stateId":"9b8a08ec-f5ae-4744-abbb-d370af5578f0","typeOfStateId":"state","$connId":"con_88","$id":"f36f66c9-b4bb-47e7-8ff4-818754f6c5ae","conditions":[{"source":"context","comparison":"equals","values":["APROVAR"],"variable":"authResponse@data.acao"}],"$invalid":false},{"stateId":"9e90a68c-4d66-4773-8177-0b67c750371c","typeOfStateId":"state","$connId":"con_93","$id":"e5dd67fd-d394-4e03-9ab4-9f2dd29406c1","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"0ed4b1dc-7069-460a-9a53-dae10519de22","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} exibicao\"","$invalid":false,"settings":{"extras":{},"category":"{{state.name}} exibicao","action":"exibicao"},"conditions":[]},{"$id":"9bd38869-79e8-4e2b-aa67-4ef778a15c93","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"encodingUrl\"","$invalid":false,"settings":{"function":"run","source":"function run(clientId, grantType, clientSecret) {\n\n    const URL = `client_id=${clientId}&grant_type=${grantType}&client_secret=${clientSecret}`\n    return URL;\n\n}","inputVariables":["config.clientId","config.grantType","config.clientSecret"],"outputVariable":"encodingUrl","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"79e88a01-0329-40a4-a71b-99f407eb34f9","$typeOfContent":"","type":"ProcessHttp","$title":"Process \"bodyToken\" using \"POST\"","$invalid":false,"settings":{"headers":{"Content-Type":"application/x-www-form-urlencoded","accept":"*/*","Connection":"keep-alive","User-Agent":"Fiddler"},"method":"POST","body":"{{encodingUrl}}","uri":"{{config.urlToken}}/api/oauth/token","responseStatusVariable":"statusToken","responseBodyVariable":"bodyToken"},"conditions":[]},{"$id":"87e8fbab-0ded-4c37-876e-a65fd7c82cf9","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"bodyAuth\"","$invalid":false,"settings":{"function":"run","source":"function run(cpf, contas, numeroConta, numeroAgencia, bodyDados, identity) {\n\ttry {\n\t\tconst { nomeCliente } = JSON.parse(bodyDados).data\n\t\tconst { data } = JSON.parse(contas)\n\t\tlet { codigoCliente } = data.find(conta => conta.numeroConta === numeroConta && conta.numeroAgencia === numeroAgencia)\n\t\treturn {\n\t\t\t\"transacao\": \"CONSULTA_EXTRATO\",\n\t\t\t\"cliente\": {\n\t\t\t\t\"numeroCelular\": identity.split('@')[0],\n\t\t\t\t// \"numeroCelular\": '5511954124433',\n\t\t\t\t\"cpf\": codigoCliente,\n\t\t\t\t// \"cpf\": \"000000285\",\n\t\t\t\t\"nome\": nomeCliente\n\t\t\t\t// \"nome\": \"EMANUEL SILVA\"\n\t\t\t},\n\t\t\t\"bot\": {}\n\t\t}\n\t} catch (err) {\n\t\treturn false\n\t}\n}\n","inputVariables":["contact.extras.cpf","contas","numeroConta","numeroAgencia","bodyDados","contact.identity"],"outputVariable":"bodyAuth","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"aa680bbe-15a0-47b9-ad4a-609ff1474279","$typeOfContent":"","type":"ProcessHttp","$title":"Process \"authResponse\" using \"GET\"","$invalid":false,"settings":{"headers":{"Safra-Aplicacao":"CHT","Authorization":"Bearer {{bodyToken@access_token}}","Safra-Correlation-ID":"{{random.guid}}","Content-Type":"application/json"},"method":"POST","uri":"{{config.baseURL}}/vendas-servicos/multicanal/autorizacoes-transacoes/assistente-virtual/v1/transacoes","responseStatusVariable":"authStatus","responseBodyVariable":"authResponse","body":"{{bodyAuth}}"},"conditions":[]}],"$leavingCustomActions":[{"$id":"c5187674-7a06-4fa9-86b2-3b28e7eee5a4","$typeOfContent":"","type":"TrackEvent","$title":"Track \"api autenticacao\"","$invalid":false,"settings":{"extras":{},"category":"api autenticacao extrato","action":"extrato | {{state.name}} | {{authStatus}} | {{authResponse@data.acao}}"},"conditions":[]},{"$id":"c9971b31-adb1-4a90-ac34-d2236f36a6ec","$typeOfContent":"","type":"TrackEvent","$title":"Track \"api autenticacao extrato resumo\"","$invalid":false,"settings":{"extras":{},"category":"api autenticacao extrato resumo","action":"{{state.name}} | {{contact.identity}} | {{bodyAuth}} | {{authStatus}} | {{authResponse}}"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"isAiGenerated":false,"$tags":[{"id":"blip-tag-4067ae94-c4c5-4f08-8098-4d0fb45c3fb3","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-f2445dfa-d370-44b2-9f79-98be12a638b2","label":"ExecuteScript","background":"#FF961E","canChangeBackground":false},{"id":"blip-tag-88d7d9ae-76d7-4390-8e38-ef6680659bec","label":"ProcessHttp","background":"#7762E3","canChangeBackground":false}],"id":"a7b2633e-0182-4fc9-974e-95ce808e60dc","root":false,"$title":"[E.0.0.0][HTTP] Autenticação","$position":{"top":"545px","left":"1744px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"9e90a68c-4d66-4773-8177-0b67c750371c":{"$contentActions":[{"action":{"$id":"d7b06952-9e4e-461a-9790-e10026bf3fcb","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"b53b51bb-14cd-4853-9e65-6be1dc923f99","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"b53b51bb-14cd-4853-9e65-6be1dc923f99","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"4ab97aa9-9b7c-4398-bb73-1c85158b62e3","$typeOfContent":"raw-content","type":"SendRawMessage","settings":{"metadata":{},"type":"application/json","rawContent":"{{dynamicContent}}"}},"$invalid":false},{"input":{"bypass":true,"$cardContent":{"document":{"id":"bd763259-f0b7-45c5-b5d3-a9138271ff0a","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"75a862d1-751c-441d-917f-9d77aaf4b369","typeOfStateId":"state","$connId":"con_98","$id":"a9b8e01d-0411-4ebe-aadd-d36bad77baa0","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"7b0d34de-9d33-419c-8bdc-e01b0825ec99","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} exibicao\"","$invalid":false,"settings":{"extras":{},"category":"{{state.name}} exibicao","action":"exibicao"},"conditions":[]},{"$id":"c70dfa91-93a6-4fad-835b-3a6b1392139b","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"dynamicContent\"","$invalid":false,"settings":{"function":"run","source":"const dynamicContent = {\n  \"recipient_type\": \"individual\",\n  \"type\": \"interactive\",\n  \"interactive\": {\n    \"type\": \"cta_url\",\n    \"body\": {\n      \"text\": \"X\"\n    },\n    \"action\": {\n      \"name\": \"cta_url\",\n      \"parameters\": {\n        \"display_text\": \"X\",\n        \"url\": \"X\"\n      }\n    }\n  }\n}\n\nfunction run() {\n  try {\n    dynamicContent.interactive.body.text = `Preciso que confirme o seu número de telefone. Para isso, você precisa acessar o aplicativo e realizar o processo por lá.\n\nApós atualizar o seu cadastro, volte aqui e envie um *oi* que eu já confirmo a atualização.`\n    dynamicContent.interactive.action.parameters.display_text = `Acessar o app`\n    dynamicContent.interactive.action.parameters.url = `https://www.safra.com.br/store_redirect?dlOption=conta-corrente-extrato`\n    return dynamicContent\n  } catch (err) {\n    return false\n  }\n}","inputVariables":[],"outputVariable":"dynamicContent","LocalTimeZoneEnabled":false},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"9b613c1d-ec20-42c6-b4ba-5d98f161cd03","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"id":"blip-tag-1c7880f3-16d1-4be1-8b45-d9183fb89d3b","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-016ef1b1-5548-4b26-874c-de0394807b37","label":"ExecuteScript","background":"#FF961E","canChangeBackground":false},{"id":"blip-tag-c96fab6c-f8db-4e59-825f-91daf7087505","label":"SendMessage","background":"#EE82EE","canChangeBackground":false}],"id":"9e90a68c-4d66-4773-8177-0b67c750371c","root":false,"$title":"[E.0.0.1][MSG] Usuario não autorizado","$position":{"top":"533px","left":"2051px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"75a862d1-751c-441d-917f-9d77aaf4b369":{"$contentActions":[{"input":{"bypass":false,"$cardContent":{"document":{"id":"061c8fae-1d63-4643-b4f2-1a7ab44d5d22","type":"text/plain","textContent":"Entrada do usuário","content":"User input"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"0:15"},"$invalid":false}],"$conditionOutputs":[{"stateId":"f11abff4-9b22-4711-b3e0-85af93d51218","typeOfStateId":"state","$connId":"con_103","$id":"ac63f008-3f3c-4b59-b8cb-a37f1af52dc8","conditions":[{"source":"input","comparison":"exists","values":[]},{"values":["APROVAR"],"source":"context","comparison":"equals","variable":"authResponse@data.acao"}],"$invalid":false}],"$enteringCustomActions":[{"$id":"b33cfc33-1f9f-4eb5-9122-4c254dba8c39","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} exibicao\"","$invalid":false,"settings":{"extras":{},"category":"{{state.name}} exibicao","action":"exibicao"},"conditions":[]}],"$leavingCustomActions":[{"$id":"e7a13ba1-c929-4e9f-9965-f49944b0e3da","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"encodingUrl\"","$invalid":false,"settings":{"function":"run","source":"function run(clientId, grantType, clientSecret) {\n\n    const URL = `client_id=${clientId}&grant_type=${grantType}&client_secret=${clientSecret}`\n    return URL;\n\n}","inputVariables":["config.clientId","config.grantType","config.clientSecret"],"outputVariable":"encodingUrl","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"5b0215da-ac68-469d-8aeb-6d26fc11c91a","$typeOfContent":"","type":"ProcessHttp","$title":"Process \"bodyToken\" using \"POST\"","$invalid":false,"settings":{"headers":{"Content-Type":"application/x-www-form-urlencoded","accept":"*/*","Connection":"keep-alive","User-Agent":"Fiddler"},"method":"POST","body":"{{encodingUrl}}","uri":"{{config.urlToken}}/api/oauth/token","responseStatusVariable":"statusToken","responseBodyVariable":"bodyToken"},"conditions":[]},{"$id":"d7f564a2-c243-490a-a254-6ab29d2503b3","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"bodyAuth\"","$invalid":false,"settings":{"function":"run","source":"function run(cpf, contas, numeroConta, numeroAgencia, bodyDados, identity) {\n\ttry {\n\t\tconst { nomeCliente } = JSON.parse(bodyDados).data\n\t\tconst { data } = JSON.parse(contas)\n\t\tconst { codigoCliente } = data.find(conta => conta.numeroConta === numeroConta && conta.numeroAgencia === numeroAgencia)\n\t\treturn {\n\t\t\t\"transacao\": \"CONSULTA_EXTRATO\",\n\t\t\t\"cliente\": {\n\t\t\t\t\"numeroCelular\": identity.split('@')[0],\n\t\t\t\t\"cpf\": codigoCliente,\n\t\t\t\t\"nome\": nomeCliente\n\t\t\t},\n\t\t\t\"bot\": {}\n\t\t}\n\t} catch (err) {\n\t\treturn false\n\t}\n}\n","inputVariables":["contact.extras.cpf","contas","numeroConta","numeroAgencia","bodyDados","contact.identity"],"outputVariable":"bodyAuth","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"89f3e679-8436-492b-bb9e-293b2e124cdb","$typeOfContent":"","type":"ProcessHttp","$title":"Process \"authResponse\" using \"GET\"","$invalid":false,"settings":{"headers":{"Safra-Aplicacao":"CHT","Authorization":"Bearer {{bodyToken@access_token}}","Safra-Correlation-ID":"{{random.guid}}","Content-Type":"application/json"},"method":"POST","uri":"{{config.baseURL}}/vendas-servicos/multicanal/autorizacoes-transacoes/assistente-virtual/v1/transacoes","responseStatusVariable":"authStatus","responseBodyVariable":"authResponse","body":"{{bodyAuth}}"},"conditions":[]},{"$id":"4a7f4684-b70c-47af-ac34-2e5292d96cfe","$typeOfContent":"","type":"SetVariable","$title":"Set \"exceptionType\" to \"atualizarDadosCadastrais\"","$invalid":false,"settings":{"variable":"exceptionType","value":"atualizarDadosCadastrais"},"conditions":[{"values":["APROVAR"],"source":"context","comparison":"notEquals","variable":"authResponse@data.acao"}]},{"$id":"a268a592-c3c5-498a-8c7f-6b690527cbc6","$typeOfContent":"","type":"TrackEvent","$title":"Track \"api autenticacao\"","$invalid":false,"settings":{"extras":{},"category":"api autenticacao extrato","action":"extrato | {{state.name}} | {{authStatus}} | {{authResponse@data.acao}}"},"conditions":[]},{"$id":"7eda6eed-67e5-48bf-a062-09de3035b452","$typeOfContent":"","type":"TrackEvent","$title":"Track \"api autenticacao extrato resumo\"","$invalid":false,"settings":{"extras":{},"category":"api autenticacao extrato resumo","action":"{{state.name}} | {{contact.identity}} | {{bodyAuth}} | {{authStatus}} | {{authResponse}}"},"conditions":[]},{"$id":"e9d2a98a-93ea-4602-a5d3-d93df23f587e","$typeOfContent":"","type":"TrackEvent","$title":"Track \"{state.name} user input\"","$invalid":false,"settings":{"extras":{},"category":"{{state.name}} user input","action":"{{input.content}}"},"conditions":[{"comparison":"exists","source":"context","values":[],"variable":"input.content"}]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"isAiGenerated":false,"$tags":[{"id":"blip-tag-6071691e-a41c-4931-beb2-03288e6bb196","label":"TrackEvent","background":"#61D36F","canChangeBackground":false},{"id":"blip-tag-d8359d5b-2382-49a8-b871-fac40e6b7843","label":"ExecuteScript","background":"#FF961E","canChangeBackground":false},{"id":"blip-tag-2c40a77b-aebb-485e-b0ed-eb7400f9ccbb","label":"ProcessHttp","background":"#7762E3","canChangeBackground":false},{"id":"blip-tag-07ee7b29-6033-4475-b342-63e8c9d10b39","label":"SetVariable","background":"#FF4A1E","canChangeBackground":false},{"id":"blip-tag-b7f442cd-1de7-4d2f-a4c0-9db5809e425b","label":"UserInput","background":"#000000","canChangeBackground":false}],"id":"75a862d1-751c-441d-917f-9d77aaf4b369","root":false,"$title":"[E.0.0.1][INPUT] Aguarda atualização de telefone","$position":{"top":"647px","left":"2312px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"7e580bad-7a12-4ffe-a3d5-ef00e36097a7":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"a5782d7a-a33f-42e8-b150-fcc965925bc1","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"e08bd49f-b6f7-4e64-afac-dd36b1b569e0","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[],"id":"7e580bad-7a12-4ffe-a3d5-ef00e36097a7","root":false,"$title":"[GO TO][E.3.0.0][SET] Periodo identificado","$position":{"top":"1191px","left":"2210px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false}},"configuration":{"builder:minimumIntentScore":"0.5","builder:stateTrack":"true","builder:#localTimeZone":"E. South America Standard Time","builder:useTunnelOwnerContext":"true","serviceName":"extrato","TraceTargetType":"Http","TraceMode":"All","TraceTarget":"https://take-api-beholder.cs.blip.ai/api/traces/safrabetaextratopf","baseURL":"https://api-hml.safra.com.br","urlToken":"https://sts-api-hml.safra.com.br","clientSecret":"ee1f5004-2400-4ab1-9af7-d9168d517204","grantType":"client_credentials","clientId":"BLIP","autenticacao":"true"},"globalActions":{"$contentActions":[],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[{"$id":"11bbe09e-c7b4-4f04-bf64-317d19d0e604","$typeOfContent":"","type":"ExecuteScript","$title":"PROCESS \"currentDate\"","$invalid":false,"settings":{"function":"run","source":"function run() {\n    return getFormatDate();\n}\n\nfunction getFormatDate() {\n    const dataAtual = new Date();\n\n    const getDay = String(dataAtual.getDate()).padStart(2, '0');\n    const getMonth = String(dataAtual.getMonth() + 1).padStart(2, '0');\n    const getYear = dataAtual.getFullYear();\n    const getHour = String(dataAtual.getHours()).padStart(2, '0');\n    const getMinutes = String(dataAtual.getMinutes()).padStart(2, '0');\n    const getSeconds = String(dataAtual.getSeconds()).padStart(2, '0');\n\n    return `${getDay}/${getMonth}/${getYear}`;\n}","inputVariables":[],"outputVariable":"currentDate","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"8083af41-4d3f-40da-baf0-5f8ec7dc8682","$typeOfContent":"","type":"ExecuteScript","$title":"Process \"voltarState\"","$invalid":false,"settings":{"function":"run","source":"function ignoreBlock(stateName) {\n    try {\n        const match = stateName.match(/\\[(.*?)\\]/);\n        const stateNameOrigin = match ? match[1] : stateName;\n        const regex = /Redirect|Redirecionar/i;\n        const ignore = regex.test(stateNameOrigin);\n        return ignore;\n    } catch (err) {\n        return false\n    }\n}\n\n\nfunction run(voltarState, blockId, botOrigin, lastVoltarState, previousStateName) {\n    const state = JSON.parse(voltarState)\n    try {\n        if (!voltarState) {\n            const state = {}\n            state[botOrigin] = [blockId]\n            return state\n        }\n        const isIgnoredBlock = ignoreBlock(previousStateName)\n        if (state[botOrigin][state[botOrigin].length - 1] !== blockId && blockId !== 'onboarding' && !isIgnoredBlock && blockId !== lastVoltarState) {\n            state[botOrigin].push(blockId)\n        }\n        return state\n    } catch (err) {\n        state[botOrigin] = [blockId]\n        return state\n    }\n}","inputVariables":["voltarState","state.previous.id","config.serviceName","lastVoltarState","state.previous.name"],"outputVariable":"voltarState","LocalTimeZoneEnabled":false},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"isAiGenerated":false,"$tags":[],"id":"global-actions","$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false}}